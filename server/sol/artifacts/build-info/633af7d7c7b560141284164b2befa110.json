{
	"id": "633af7d7c7b560141284164b2befa110",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"market3.sol": {
				"content": "// remixd -s /Users/gubeomlee/Desktop/beb/project3/BEB-08-LiFT --remix-ide https://remix.ethereum.org\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ninterface erc721Interface {\n    function ownerOf(uint256 tokenId) external view returns (address); \n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n}\n\ncontract MarketPlace is Ownable {\n    // nft판매 경로를 추적하기 위한 event\n    event SaleNFT(address from, uint256 tokenId, uint256 price); \n    event BuyNFT(address from, address to, uint tokenId, uint256 price);\n    event RemoveSale(address from, uint256 tokenId); \n\n    using SafeMath for uint256;\n\n    uint256 tradingFee = 0;\n    uint256 public saleId = 0;   \n\n    mapping(uint256 => uint256) public sale;\n    mapping(uint256 => uint256) public saleIdToTokenId; \n\n    erc721Interface erc721; //Interface\n\n    //mint.sol 배포 후 market.sol배포 \n    //mint.sol MyNFT의 컨트랙트 주소를 입력하면 두 컨트랙트가 연결된다.\n    function setInterface(address _contractAddress) public onlyOwner returns(bool) {\n        require(_contractAddress != address(0x0));\n        erc721 = erc721Interface(_contractAddress);\n        return true;  \n    } \n \n    // 판매 등록 함수 \n    function saleNFT(uint256 _tokenId, uint256 _price) public {\n        require(_price > 0, \"Price must be greater than zero\");\n        require(msg.sender == erc721.ownerOf(_tokenId), \"Caller is not  token owner!\");\n        require(sale[_tokenId] == 0, \"This token is already on sale\");\n        sale[_tokenId] = _price;\n        //컨트랙트에게 apporve 권한 부여하는 것은 mint contract에서 실행한다.\n        if(saleIdToTokenId[_tokenId] == 0){\n            saleId++; \n            saleIdToTokenId[_tokenId] = saleId; \n        }\n        emit SaleNFT(msg.sender, _tokenId, _price);    \n    }\n    \n    function buyNFT(uint256 _tokenId) public payable {\n        require(sale[_tokenId] != 0, \"NFT is not for sale\");\n        uint256 price = sale[_tokenId]; //msg.value는 wei 단위여서 eth단위로 환산하기 위한 계산\n        require(msg.value == price, \"Incorrect payment amount\");\n        address seller = erc721.ownerOf(_tokenId); \n        erc721.safeTransferFrom(seller, msg.sender, _tokenId); //컨트랙트 approve권한으로 safeTransferFrom함수 호출, safeTransferFrom함수 호출 시 approve 초기화 \n        payable(seller).transfer(msg.value * (100 - tradingFee) / 100); //컨트랙트에 들어온 이더를 매도자에게 즉시 전달\n        delete sale[_tokenId];\n        emit BuyNFT(seller, msg.sender, _tokenId, price);          \n    }\n\n    // removeSale 함수의 기능중 approve 기능은 mint contract의 approve함수를 통해 실행한다. \n    function removeSale(uint256 _tokenId) public {\n        require(msg.sender == erc721.ownerOf(_tokenId), \"Only seller can remove list\");\n        delete sale[_tokenId]; \n        // 판매 리스트 제거 시 approve권한 초기화\n        emit RemoveSale(msg.sender, _tokenId);\n    }\n\n    function setTradingFee(uint256 _tradingFee) public onlyOwner {\n        tradingFee = _tradingFee;\n    }\n\n    function withdraw() public onlyOwner {\n        payable(owner()).transfer(address(this).balance); \n    }\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xEC PUSH22 0x3447C361EB41C4FE16248018585C42CA231123171BCA PUSH29 0x35A05E054D3E64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xEC PUSH22 0x3447C361EB41C4FE16248018585C42CA231123171BCA PUSH29 0x35A05E054D3E64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"market3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"market3.sol": {
				"MarketPlace": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "BuyNFT",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "RemoveSale",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "SaleNFT",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "buyNFT",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "removeSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "sale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "saleIdToTokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "saleNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_contractAddress",
									"type": "address"
								}
							],
							"name": "setInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tradingFee",
									"type": "uint256"
								}
							],
							"name": "setTradingFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"market3.sol\":458:3367  contract MarketPlace is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"market3.sol\":797:798  0 */\n  0x00\n    /* \"market3.sol\":776:798  uint256 tradingFee = 0 */\n  0x01\n  sstore\n    /* \"market3.sol\":828:829  0 */\n  0x00\n    /* \"market3.sol\":804:829  uint256 public saleId = 0 */\n  0x02\n  sstore\n    /* \"market3.sol\":458:3367  contract MarketPlace is Ownable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"market3.sol\":458:3367  contract MarketPlace is Ownable {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"market3.sol\":458:3367  contract MarketPlace is Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"market3.sol\":458:3367  contract MarketPlace is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x96032702\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x97492c46\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb0d54bcf\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xc84c0387\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_14:\n      dup1\n      0x26d8fde2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x44e797e9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x51ed8288\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x60898801\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"market3.sol\":1370:1971  function saleNFT(uint256 _tokenId, uint256 _price) public {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"market3.sol\":3262:3365  function withdraw() public onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"market3.sol\":2866:3148  function removeSale(uint256 _tokenId) public {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"market3.sol\":1981:2748  function buyNFT(uint256 _tokenId) public payable {... */\n    tag_5:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      stop\n        /* \"market3.sol\":884:934  mapping(uint256 => uint256) public saleIdToTokenId */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"market3.sol\":839:878  mapping(uint256 => uint256) public sale */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"market3.sol\":1121:1333  function setInterface(address _contractAddress) public onlyOwner returns(bool) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"market3.sol\":3154:3256  function setTradingFee(uint256 _tradingFee) public onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"market3.sol\":804:829  uint256 public saleId = 0 */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"market3.sol\":1370:1971  function saleNFT(uint256 _tokenId, uint256 _price) public {... */\n    tag_19:\n        /* \"market3.sol\":1455:1456  0 */\n      0x00\n        /* \"market3.sol\":1446:1452  _price */\n      dup2\n        /* \"market3.sol\":1446:1456  _price > 0 */\n      gt\n        /* \"market3.sol\":1438:1492  require(_price > 0, \"Price must be greater than zero\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"market3.sol\":1524:1530  erc721 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"market3.sol\":1524:1538  erc721.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"market3.sol\":1539:1547  _tokenId */\n      dup4\n        /* \"market3.sol\":1524:1548  erc721.ownerOf(_tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_73:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_75:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"market3.sol\":1510:1548  msg.sender == erc721.ownerOf(_tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"market3.sol\":1510:1520  msg.sender */\n      caller\n        /* \"market3.sol\":1510:1548  msg.sender == erc721.ownerOf(_tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"market3.sol\":1502:1580  require(msg.sender == erc721.ownerOf(_tokenId), \"Caller is not  token owner!\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"market3.sol\":1616:1617  0 */\n      0x00\n        /* \"market3.sol\":1598:1602  sale */\n      0x03\n        /* \"market3.sol\":1598:1612  sale[_tokenId] */\n      0x00\n        /* \"market3.sol\":1603:1611  _tokenId */\n      dup5\n        /* \"market3.sol\":1598:1612  sale[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"market3.sol\":1598:1617  sale[_tokenId] == 0 */\n      eq\n        /* \"market3.sol\":1590:1651  require(sale[_tokenId] == 0, \"This token is already on sale\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"market3.sol\":1678:1684  _price */\n      dup1\n        /* \"market3.sol\":1661:1665  sale */\n      0x03\n        /* \"market3.sol\":1661:1675  sale[_tokenId] */\n      0x00\n        /* \"market3.sol\":1666:1674  _tokenId */\n      dup5\n        /* \"market3.sol\":1661:1675  sale[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"market3.sol\":1661:1684  sale[_tokenId] = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"market3.sol\":1824:1825  0 */\n      0x00\n        /* \"market3.sol\":1795:1810  saleIdToTokenId */\n      0x04\n        /* \"market3.sol\":1795:1820  saleIdToTokenId[_tokenId] */\n      0x00\n        /* \"market3.sol\":1811:1819  _tokenId */\n      dup5\n        /* \"market3.sol\":1795:1820  saleIdToTokenId[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"market3.sol\":1795:1825  saleIdToTokenId[_tokenId] == 0 */\n      sub\n        /* \"market3.sol\":1792:1909  if(saleIdToTokenId[_tokenId] == 0){... */\n      tag_84\n      jumpi\n        /* \"market3.sol\":1840:1846  saleId */\n      0x02\n      0x00\n        /* \"market3.sol\":1840:1848  saleId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"market3.sol\":1891:1897  saleId */\n      sload(0x02)\n        /* \"market3.sol\":1863:1878  saleIdToTokenId */\n      0x04\n        /* \"market3.sol\":1863:1888  saleIdToTokenId[_tokenId] */\n      0x00\n        /* \"market3.sol\":1879:1887  _tokenId */\n      dup5\n        /* \"market3.sol\":1863:1888  saleIdToTokenId[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"market3.sol\":1863:1897  saleIdToTokenId[_tokenId] = saleId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"market3.sol\":1792:1909  if(saleIdToTokenId[_tokenId] == 0){... */\n    tag_84:\n        /* \"market3.sol\":1923:1960  SaleNFT(msg.sender, _tokenId, _price) */\n      0xa6a83f41a222e54496abc9714714160fa0ea96150ffdb4aebaf93e3054baa942\n        /* \"market3.sol\":1931:1941  msg.sender */\n      caller\n        /* \"market3.sol\":1943:1951  _tokenId */\n      dup4\n        /* \"market3.sol\":1953:1959  _price */\n      dup4\n        /* \"market3.sol\":1923:1960  SaleNFT(msg.sender, _tokenId, _price) */\n      mload(0x40)\n      tag_87\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"market3.sol\":1370:1971  function saleNFT(uint256 _tokenId, uint256 _price) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"market3.sol\":3262:3365  function withdraw() public onlyOwner {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_90:\n        /* \"market3.sol\":3317:3324  owner() */\n      tag_93\n        /* \"market3.sol\":3317:3322  owner */\n      tag_42\n        /* \"market3.sol\":3317:3324  owner() */\n      jump\t// in\n    tag_93:\n        /* \"market3.sol\":3309:3334  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"market3.sol\":3309:3357  payable(owner()).transfer(address(this).balance) */\n      0x08fc\n        /* \"market3.sol\":3335:3356  address(this).balance */\n      selfbalance\n        /* \"market3.sol\":3309:3357  payable(owner()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n        /* \"market3.sol\":3262:3365  function withdraw() public onlyOwner {... */\n      jump\t// out\n        /* \"market3.sol\":2866:3148  function removeSale(uint256 _tokenId) public {... */\n    tag_27:\n        /* \"market3.sol\":2943:2949  erc721 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"market3.sol\":2943:2957  erc721.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"market3.sol\":2958:2966  _tokenId */\n      dup3\n        /* \"market3.sol\":2943:2967  erc721.ownerOf(_tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_97:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_100:\n        /* \"market3.sol\":2929:2967  msg.sender == erc721.ownerOf(_tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"market3.sol\":2929:2939  msg.sender */\n      caller\n        /* \"market3.sol\":2929:2967  msg.sender == erc721.ownerOf(_tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"market3.sol\":2921:2999  require(msg.sender == erc721.ownerOf(_tokenId), \"Only seller can remove list\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"market3.sol\":3016:3020  sale */\n      0x03\n        /* \"market3.sol\":3016:3030  sale[_tokenId] */\n      0x00\n        /* \"market3.sol\":3021:3029  _tokenId */\n      dup3\n        /* \"market3.sol\":3016:3030  sale[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"market3.sol\":3009:3030  delete sale[_tokenId] */\n      0x00\n      swap1\n      sstore\n        /* \"market3.sol\":3109:3141  RemoveSale(msg.sender, _tokenId) */\n      0xcde58bc7bff2645d4598b3ef8da25103b048f9904835655d853e614095d7f2ab\n        /* \"market3.sol\":3120:3130  msg.sender */\n      caller\n        /* \"market3.sol\":3132:3140  _tokenId */\n      dup3\n        /* \"market3.sol\":3109:3141  RemoveSale(msg.sender, _tokenId) */\n      mload(0x40)\n      tag_104\n      swap3\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"market3.sol\":2866:3148  function removeSale(uint256 _tokenId) public {... */\n      pop\n      jump\t// out\n        /* \"market3.sol\":1981:2748  function buyNFT(uint256 _tokenId) public payable {... */\n    tag_30:\n        /* \"market3.sol\":2066:2067  0 */\n      0x00\n        /* \"market3.sol\":2048:2052  sale */\n      0x03\n        /* \"market3.sol\":2048:2062  sale[_tokenId] */\n      0x00\n        /* \"market3.sol\":2053:2061  _tokenId */\n      dup4\n        /* \"market3.sol\":2048:2062  sale[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"market3.sol\":2048:2067  sale[_tokenId] != 0 */\n      sub\n        /* \"market3.sol\":2040:2091  require(sale[_tokenId] != 0, \"NFT is not for sale\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"market3.sol\":2101:2114  uint256 price */\n      0x00\n        /* \"market3.sol\":2117:2121  sale */\n      0x03\n        /* \"market3.sol\":2117:2131  sale[_tokenId] */\n      0x00\n        /* \"market3.sol\":2122:2130  _tokenId */\n      dup4\n        /* \"market3.sol\":2117:2131  sale[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"market3.sol\":2101:2131  uint256 price = sale[_tokenId] */\n      swap1\n      pop\n        /* \"market3.sol\":2234:2239  price */\n      dup1\n        /* \"market3.sol\":2221:2230  msg.value */\n      callvalue\n        /* \"market3.sol\":2221:2239  msg.value == price */\n      eq\n        /* \"market3.sol\":2213:2268  require(msg.value == price, \"Incorrect payment amount\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"market3.sol\":2278:2292  address seller */\n      0x00\n        /* \"market3.sol\":2295:2301  erc721 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"market3.sol\":2295:2309  erc721.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"market3.sol\":2310:2318  _tokenId */\n      dup5\n        /* \"market3.sol\":2295:2319  erc721.ownerOf(_tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_113:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_116:\n        /* \"market3.sol\":2278:2319  address seller = erc721.ownerOf(_tokenId) */\n      swap1\n      pop\n        /* \"market3.sol\":2330:2336  erc721 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"market3.sol\":2330:2353  erc721.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"market3.sol\":2354:2360  seller */\n      dup3\n        /* \"market3.sol\":2362:2372  msg.sender */\n      caller\n        /* \"market3.sol\":2374:2382  _tokenId */\n      dup7\n        /* \"market3.sol\":2330:2383  erc721.safeTransferFrom(seller, msg.sender, _tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n        /* \"market3.sol\":2520:2526  seller */\n      dup1\n        /* \"market3.sol\":2512:2536  payable(seller).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"market3.sol\":2512:2574  payable(seller).transfer(msg.value * (100 - tradingFee) / 100) */\n      0x08fc\n        /* \"market3.sol\":2570:2573  100 */\n      0x64\n        /* \"market3.sol\":2556:2566  tradingFee */\n      sload(0x01)\n        /* \"market3.sol\":2550:2553  100 */\n      0x64\n        /* \"market3.sol\":2550:2566  100 - tradingFee */\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"market3.sol\":2537:2546  msg.value */\n      callvalue\n        /* \"market3.sol\":2537:2567  msg.value * (100 - tradingFee) */\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"market3.sol\":2537:2573  msg.value * (100 - tradingFee) / 100 */\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"market3.sol\":2512:2574  payable(seller).transfer(msg.value * (100 - tradingFee) / 100) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_129\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_129:\n      pop\n        /* \"market3.sol\":2659:2663  sale */\n      0x03\n        /* \"market3.sol\":2659:2673  sale[_tokenId] */\n      0x00\n        /* \"market3.sol\":2664:2672  _tokenId */\n      dup5\n        /* \"market3.sol\":2659:2673  sale[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"market3.sol\":2652:2673  delete sale[_tokenId] */\n      0x00\n      swap1\n      sstore\n        /* \"market3.sol\":2688:2731  BuyNFT(seller, msg.sender, _tokenId, price) */\n      0xe35677743c6b7abf01cca38cf0f4b986386e50105ec5fd3f42daeea57acf57a9\n        /* \"market3.sol\":2695:2701  seller */\n      dup2\n        /* \"market3.sol\":2703:2713  msg.sender */\n      caller\n        /* \"market3.sol\":2715:2723  _tokenId */\n      dup6\n        /* \"market3.sol\":2725:2730  price */\n      dup6\n        /* \"market3.sol\":2688:2731  BuyNFT(seller, msg.sender, _tokenId, price) */\n      mload(0x40)\n      tag_130\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"market3.sol\":2030:2748  {... */\n      pop\n      pop\n        /* \"market3.sol\":1981:2748  function buyNFT(uint256 _tokenId) public payable {... */\n      pop\n      jump\t// out\n        /* \"market3.sol\":884:934  mapping(uint256 => uint256) public saleIdToTokenId */\n    tag_34:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"market3.sol\":839:878  mapping(uint256 => uint256) public sale */\n    tag_48:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"market3.sol\":1121:1333  function setInterface(address _contractAddress) public onlyOwner returns(bool) {... */\n    tag_54:\n        /* \"market3.sol\":1194:1198  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_139:\n        /* \"market3.sol\":1246:1249  0x0 */\n      0x00\n        /* \"market3.sol\":1218:1250  _contractAddress != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"market3.sol\":1218:1234  _contractAddress */\n      dup3\n        /* \"market3.sol\":1218:1250  _contractAddress != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"market3.sol\":1210:1251  require(_contractAddress != address(0x0)) */\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n        /* \"market3.sol\":1286:1302  _contractAddress */\n      dup2\n        /* \"market3.sol\":1261:1267  erc721 */\n      0x05\n      0x00\n        /* \"market3.sol\":1261:1303  erc721 = erc721Interface(_contractAddress) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"market3.sol\":1320:1324  true */\n      0x01\n        /* \"market3.sol\":1313:1324  return true */\n      swap1\n      pop\n        /* \"market3.sol\":1121:1333  function setInterface(address _contractAddress) public onlyOwner returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"market3.sol\":3154:3256  function setTradingFee(uint256 _tradingFee) public onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_143:\n        /* \"market3.sol\":3238:3249  _tradingFee */\n      dup1\n        /* \"market3.sol\":3225:3235  tradingFee */\n      0x01\n        /* \"market3.sol\":3225:3249  tradingFee = _tradingFee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"market3.sol\":3154:3256  function setTradingFee(uint256 _tradingFee) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"market3.sol\":804:829  uint256 public saleId = 0 */\n    tag_63:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_162:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_164:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_165:\n        /* \"#utility.yul\":490:514   */\n      tag_201\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_164\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_202\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_202:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_166:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_204\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_165\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1164   */\n    tag_18:\n        /* \"#utility.yul\":758:764   */\n      0x00\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":815:817   */\n      0x40\n        /* \"#utility.yul\":803:812   */\n      dup4\n        /* \"#utility.yul\":794:801   */\n      dup6\n        /* \"#utility.yul\":790:813   */\n      sub\n        /* \"#utility.yul\":786:818   */\n      slt\n        /* \"#utility.yul\":783:902   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":821:900   */\n      tag_207\n      tag_162\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":783:902   */\n    tag_206:\n        /* \"#utility.yul\":941:942   */\n      0x00\n        /* \"#utility.yul\":966:1019   */\n      tag_208\n        /* \"#utility.yul\":1011:1018   */\n      dup6\n        /* \"#utility.yul\":1002:1008   */\n      dup3\n        /* \"#utility.yul\":991:1000   */\n      dup7\n        /* \"#utility.yul\":987:1009   */\n      add\n        /* \"#utility.yul\":966:1019   */\n      tag_166\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":956:1019   */\n      swap3\n      pop\n        /* \"#utility.yul\":912:1029   */\n      pop\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1094:1147   */\n      tag_209\n        /* \"#utility.yul\":1139:1146   */\n      dup6\n        /* \"#utility.yul\":1130:1136   */\n      dup3\n        /* \"#utility.yul\":1119:1128   */\n      dup7\n        /* \"#utility.yul\":1115:1137   */\n      add\n        /* \"#utility.yul\":1094:1147   */\n      tag_166\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":1084:1147   */\n      swap2\n      pop\n        /* \"#utility.yul\":1039:1157   */\n      pop\n        /* \"#utility.yul\":690:1164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1499   */\n    tag_26:\n        /* \"#utility.yul\":1229:1235   */\n      0x00\n        /* \"#utility.yul\":1278:1280   */\n      0x20\n        /* \"#utility.yul\":1266:1275   */\n      dup3\n        /* \"#utility.yul\":1257:1264   */\n      dup5\n        /* \"#utility.yul\":1253:1276   */\n      sub\n        /* \"#utility.yul\":1249:1281   */\n      slt\n        /* \"#utility.yul\":1246:1365   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":1284:1363   */\n      tag_212\n      tag_162\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":1246:1365   */\n    tag_211:\n        /* \"#utility.yul\":1404:1405   */\n      0x00\n        /* \"#utility.yul\":1429:1482   */\n      tag_213\n        /* \"#utility.yul\":1474:1481   */\n      dup5\n        /* \"#utility.yul\":1465:1471   */\n      dup3\n        /* \"#utility.yul\":1454:1463   */\n      dup6\n        /* \"#utility.yul\":1450:1472   */\n      add\n        /* \"#utility.yul\":1429:1482   */\n      tag_166\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":1419:1482   */\n      swap2\n      pop\n        /* \"#utility.yul\":1375:1492   */\n      pop\n        /* \"#utility.yul\":1170:1499   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1505:1623   */\n    tag_167:\n        /* \"#utility.yul\":1592:1616   */\n      tag_215\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1592:1616   */\n      tag_164\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":1587:1590   */\n      dup3\n        /* \"#utility.yul\":1580:1617   */\n      mstore\n        /* \"#utility.yul\":1505:1623   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1629:1851   */\n    tag_36:\n        /* \"#utility.yul\":1722:1726   */\n      0x00\n        /* \"#utility.yul\":1760:1762   */\n      0x20\n        /* \"#utility.yul\":1749:1758   */\n      dup3\n        /* \"#utility.yul\":1745:1763   */\n      add\n        /* \"#utility.yul\":1737:1763   */\n      swap1\n      pop\n        /* \"#utility.yul\":1773:1844   */\n      tag_217\n        /* \"#utility.yul\":1841:1842   */\n      0x00\n        /* \"#utility.yul\":1830:1839   */\n      dup4\n        /* \"#utility.yul\":1826:1843   */\n      add\n        /* \"#utility.yul\":1817:1823   */\n      dup5\n        /* \"#utility.yul\":1773:1844   */\n      tag_167\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":1629:1851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1857:1983   */\n    tag_168:\n        /* \"#utility.yul\":1894:1901   */\n      0x00\n        /* \"#utility.yul\":1934:1976   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1927:1932   */\n      dup3\n        /* \"#utility.yul\":1923:1977   */\n      and\n        /* \"#utility.yul\":1912:1977   */\n      swap1\n      pop\n        /* \"#utility.yul\":1857:1983   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1989:2085   */\n    tag_169:\n        /* \"#utility.yul\":2026:2033   */\n      0x00\n        /* \"#utility.yul\":2055:2079   */\n      tag_220\n        /* \"#utility.yul\":2073:2078   */\n      dup3\n        /* \"#utility.yul\":2055:2079   */\n      tag_168\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":2044:2079   */\n      swap1\n      pop\n        /* \"#utility.yul\":1989:2085   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2209   */\n    tag_170:\n        /* \"#utility.yul\":2178:2202   */\n      tag_222\n        /* \"#utility.yul\":2196:2201   */\n      dup2\n        /* \"#utility.yul\":2178:2202   */\n      tag_169\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2173:2176   */\n      dup3\n        /* \"#utility.yul\":2166:2203   */\n      mstore\n        /* \"#utility.yul\":2091:2209   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2215:2437   */\n    tag_44:\n        /* \"#utility.yul\":2308:2312   */\n      0x00\n        /* \"#utility.yul\":2346:2348   */\n      0x20\n        /* \"#utility.yul\":2335:2344   */\n      dup3\n        /* \"#utility.yul\":2331:2349   */\n      add\n        /* \"#utility.yul\":2323:2349   */\n      swap1\n      pop\n        /* \"#utility.yul\":2359:2430   */\n      tag_224\n        /* \"#utility.yul\":2427:2428   */\n      0x00\n        /* \"#utility.yul\":2416:2425   */\n      dup4\n        /* \"#utility.yul\":2412:2429   */\n      add\n        /* \"#utility.yul\":2403:2409   */\n      dup5\n        /* \"#utility.yul\":2359:2430   */\n      tag_170\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2215:2437   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2443:2565   */\n    tag_171:\n        /* \"#utility.yul\":2516:2540   */\n      tag_226\n        /* \"#utility.yul\":2534:2539   */\n      dup2\n        /* \"#utility.yul\":2516:2540   */\n      tag_169\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":2509:2514   */\n      dup2\n        /* \"#utility.yul\":2506:2541   */\n      eq\n        /* \"#utility.yul\":2496:2559   */\n      tag_227\n      jumpi\n        /* \"#utility.yul\":2555:2556   */\n      0x00\n        /* \"#utility.yul\":2552:2553   */\n      dup1\n        /* \"#utility.yul\":2545:2557   */\n      revert\n        /* \"#utility.yul\":2496:2559   */\n    tag_227:\n        /* \"#utility.yul\":2443:2565   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2710   */\n    tag_172:\n        /* \"#utility.yul\":2617:2622   */\n      0x00\n        /* \"#utility.yul\":2655:2661   */\n      dup2\n        /* \"#utility.yul\":2642:2662   */\n      calldataload\n        /* \"#utility.yul\":2633:2662   */\n      swap1\n      pop\n        /* \"#utility.yul\":2671:2704   */\n      tag_229\n        /* \"#utility.yul\":2698:2703   */\n      dup2\n        /* \"#utility.yul\":2671:2704   */\n      tag_171\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":2571:2710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:3045   */\n    tag_53:\n        /* \"#utility.yul\":2775:2781   */\n      0x00\n        /* \"#utility.yul\":2824:2826   */\n      0x20\n        /* \"#utility.yul\":2812:2821   */\n      dup3\n        /* \"#utility.yul\":2803:2810   */\n      dup5\n        /* \"#utility.yul\":2799:2822   */\n      sub\n        /* \"#utility.yul\":2795:2827   */\n      slt\n        /* \"#utility.yul\":2792:2911   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":2830:2909   */\n      tag_232\n      tag_162\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":2792:2911   */\n    tag_231:\n        /* \"#utility.yul\":2950:2951   */\n      0x00\n        /* \"#utility.yul\":2975:3028   */\n      tag_233\n        /* \"#utility.yul\":3020:3027   */\n      dup5\n        /* \"#utility.yul\":3011:3017   */\n      dup3\n        /* \"#utility.yul\":3000:3009   */\n      dup6\n        /* \"#utility.yul\":2996:3018   */\n      add\n        /* \"#utility.yul\":2975:3028   */\n      tag_172\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":2965:3028   */\n      swap2\n      pop\n        /* \"#utility.yul\":2921:3038   */\n      pop\n        /* \"#utility.yul\":2716:3045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3141   */\n    tag_173:\n        /* \"#utility.yul\":3085:3092   */\n      0x00\n        /* \"#utility.yul\":3128:3133   */\n      dup2\n        /* \"#utility.yul\":3121:3134   */\n      iszero\n        /* \"#utility.yul\":3114:3135   */\n      iszero\n        /* \"#utility.yul\":3103:3135   */\n      swap1\n      pop\n        /* \"#utility.yul\":3051:3141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3147:3256   */\n    tag_174:\n        /* \"#utility.yul\":3228:3249   */\n      tag_236\n        /* \"#utility.yul\":3243:3248   */\n      dup2\n        /* \"#utility.yul\":3228:3249   */\n      tag_173\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":3223:3226   */\n      dup3\n        /* \"#utility.yul\":3216:3250   */\n      mstore\n        /* \"#utility.yul\":3147:3256   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3262:3472   */\n    tag_56:\n        /* \"#utility.yul\":3349:3353   */\n      0x00\n        /* \"#utility.yul\":3387:3389   */\n      0x20\n        /* \"#utility.yul\":3376:3385   */\n      dup3\n        /* \"#utility.yul\":3372:3390   */\n      add\n        /* \"#utility.yul\":3364:3390   */\n      swap1\n      pop\n        /* \"#utility.yul\":3400:3465   */\n      tag_238\n        /* \"#utility.yul\":3462:3463   */\n      0x00\n        /* \"#utility.yul\":3451:3460   */\n      dup4\n        /* \"#utility.yul\":3447:3464   */\n      add\n        /* \"#utility.yul\":3438:3444   */\n      dup5\n        /* \"#utility.yul\":3400:3465   */\n      tag_174\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":3262:3472   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3478:3647   */\n    tag_175:\n        /* \"#utility.yul\":3562:3573   */\n      0x00\n        /* \"#utility.yul\":3596:3602   */\n      dup3\n        /* \"#utility.yul\":3591:3594   */\n      dup3\n        /* \"#utility.yul\":3584:3603   */\n      mstore\n        /* \"#utility.yul\":3636:3640   */\n      0x20\n        /* \"#utility.yul\":3631:3634   */\n      dup3\n        /* \"#utility.yul\":3627:3641   */\n      add\n        /* \"#utility.yul\":3612:3641   */\n      swap1\n      pop\n        /* \"#utility.yul\":3478:3647   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3834   */\n    tag_176:\n        /* \"#utility.yul\":3793:3826   */\n      0x5072696365206d7573742062652067726561746572207468616e207a65726f00\n        /* \"#utility.yul\":3789:3790   */\n      0x00\n        /* \"#utility.yul\":3781:3787   */\n      dup3\n        /* \"#utility.yul\":3777:3791   */\n      add\n        /* \"#utility.yul\":3770:3827   */\n      mstore\n        /* \"#utility.yul\":3653:3834   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3840:4206   */\n    tag_177:\n        /* \"#utility.yul\":3982:3985   */\n      0x00\n        /* \"#utility.yul\":4003:4070   */\n      tag_242\n        /* \"#utility.yul\":4067:4069   */\n      0x1f\n        /* \"#utility.yul\":4062:4065   */\n      dup4\n        /* \"#utility.yul\":4003:4070   */\n      tag_175\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":3996:4070   */\n      swap2\n      pop\n        /* \"#utility.yul\":4079:4172   */\n      tag_243\n        /* \"#utility.yul\":4168:4171   */\n      dup3\n        /* \"#utility.yul\":4079:4172   */\n      tag_176\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":4197:4199   */\n      0x20\n        /* \"#utility.yul\":4192:4195   */\n      dup3\n        /* \"#utility.yul\":4188:4200   */\n      add\n        /* \"#utility.yul\":4181:4200   */\n      swap1\n      pop\n        /* \"#utility.yul\":3840:4206   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4212:4631   */\n    tag_72:\n        /* \"#utility.yul\":4378:4382   */\n      0x00\n        /* \"#utility.yul\":4416:4418   */\n      0x20\n        /* \"#utility.yul\":4405:4414   */\n      dup3\n        /* \"#utility.yul\":4401:4419   */\n      add\n        /* \"#utility.yul\":4393:4419   */\n      swap1\n      pop\n        /* \"#utility.yul\":4465:4474   */\n      dup2\n        /* \"#utility.yul\":4459:4463   */\n      dup2\n        /* \"#utility.yul\":4455:4475   */\n      sub\n        /* \"#utility.yul\":4451:4452   */\n      0x00\n        /* \"#utility.yul\":4440:4449   */\n      dup4\n        /* \"#utility.yul\":4436:4453   */\n      add\n        /* \"#utility.yul\":4429:4476   */\n      mstore\n        /* \"#utility.yul\":4493:4624   */\n      tag_245\n        /* \"#utility.yul\":4619:4623   */\n      dup2\n        /* \"#utility.yul\":4493:4624   */\n      tag_177\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":4485:4624   */\n      swap1\n      pop\n        /* \"#utility.yul\":4212:4631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4637:4780   */\n    tag_178:\n        /* \"#utility.yul\":4694:4699   */\n      0x00\n        /* \"#utility.yul\":4725:4731   */\n      dup2\n        /* \"#utility.yul\":4719:4732   */\n      mload\n        /* \"#utility.yul\":4710:4732   */\n      swap1\n      pop\n        /* \"#utility.yul\":4741:4774   */\n      tag_247\n        /* \"#utility.yul\":4768:4773   */\n      dup2\n        /* \"#utility.yul\":4741:4774   */\n      tag_171\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":4637:4780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4786:5137   */\n    tag_77:\n        /* \"#utility.yul\":4856:4862   */\n      0x00\n        /* \"#utility.yul\":4905:4907   */\n      0x20\n        /* \"#utility.yul\":4893:4902   */\n      dup3\n        /* \"#utility.yul\":4884:4891   */\n      dup5\n        /* \"#utility.yul\":4880:4903   */\n      sub\n        /* \"#utility.yul\":4876:4908   */\n      slt\n        /* \"#utility.yul\":4873:4992   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":4911:4990   */\n      tag_250\n      tag_162\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":4873:4992   */\n    tag_249:\n        /* \"#utility.yul\":5031:5032   */\n      0x00\n        /* \"#utility.yul\":5056:5120   */\n      tag_251\n        /* \"#utility.yul\":5112:5119   */\n      dup5\n        /* \"#utility.yul\":5103:5109   */\n      dup3\n        /* \"#utility.yul\":5092:5101   */\n      dup6\n        /* \"#utility.yul\":5088:5110   */\n      add\n        /* \"#utility.yul\":5056:5120   */\n      tag_178\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":5046:5120   */\n      swap2\n      pop\n        /* \"#utility.yul\":5002:5130   */\n      pop\n        /* \"#utility.yul\":4786:5137   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5143:5320   */\n    tag_179:\n        /* \"#utility.yul\":5283:5312   */\n      0x43616c6c6572206973206e6f742020746f6b656e206f776e6572210000000000\n        /* \"#utility.yul\":5279:5280   */\n      0x00\n        /* \"#utility.yul\":5271:5277   */\n      dup3\n        /* \"#utility.yul\":5267:5281   */\n      add\n        /* \"#utility.yul\":5260:5313   */\n      mstore\n        /* \"#utility.yul\":5143:5320   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5326:5692   */\n    tag_180:\n        /* \"#utility.yul\":5468:5471   */\n      0x00\n        /* \"#utility.yul\":5489:5556   */\n      tag_254\n        /* \"#utility.yul\":5553:5555   */\n      0x1b\n        /* \"#utility.yul\":5548:5551   */\n      dup4\n        /* \"#utility.yul\":5489:5556   */\n      tag_175\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":5482:5556   */\n      swap2\n      pop\n        /* \"#utility.yul\":5565:5658   */\n      tag_255\n        /* \"#utility.yul\":5654:5657   */\n      dup3\n        /* \"#utility.yul\":5565:5658   */\n      tag_179\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":5683:5685   */\n      0x20\n        /* \"#utility.yul\":5678:5681   */\n      dup3\n        /* \"#utility.yul\":5674:5686   */\n      add\n        /* \"#utility.yul\":5667:5686   */\n      swap1\n      pop\n        /* \"#utility.yul\":5326:5692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5698:6117   */\n    tag_80:\n        /* \"#utility.yul\":5864:5868   */\n      0x00\n        /* \"#utility.yul\":5902:5904   */\n      0x20\n        /* \"#utility.yul\":5891:5900   */\n      dup3\n        /* \"#utility.yul\":5887:5905   */\n      add\n        /* \"#utility.yul\":5879:5905   */\n      swap1\n      pop\n        /* \"#utility.yul\":5951:5960   */\n      dup2\n        /* \"#utility.yul\":5945:5949   */\n      dup2\n        /* \"#utility.yul\":5941:5961   */\n      sub\n        /* \"#utility.yul\":5937:5938   */\n      0x00\n        /* \"#utility.yul\":5926:5935   */\n      dup4\n        /* \"#utility.yul\":5922:5939   */\n      add\n        /* \"#utility.yul\":5915:5962   */\n      mstore\n        /* \"#utility.yul\":5979:6110   */\n      tag_257\n        /* \"#utility.yul\":6105:6109   */\n      dup2\n        /* \"#utility.yul\":5979:6110   */\n      tag_180\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":5971:6110   */\n      swap1\n      pop\n        /* \"#utility.yul\":5698:6117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6123:6302   */\n    tag_181:\n        /* \"#utility.yul\":6263:6294   */\n      0x5468697320746f6b656e20697320616c7265616479206f6e2073616c65000000\n        /* \"#utility.yul\":6259:6260   */\n      0x00\n        /* \"#utility.yul\":6251:6257   */\n      dup3\n        /* \"#utility.yul\":6247:6261   */\n      add\n        /* \"#utility.yul\":6240:6295   */\n      mstore\n        /* \"#utility.yul\":6123:6302   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6308:6674   */\n    tag_182:\n        /* \"#utility.yul\":6450:6453   */\n      0x00\n        /* \"#utility.yul\":6471:6538   */\n      tag_260\n        /* \"#utility.yul\":6535:6537   */\n      0x1d\n        /* \"#utility.yul\":6530:6533   */\n      dup4\n        /* \"#utility.yul\":6471:6538   */\n      tag_175\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":6464:6538   */\n      swap2\n      pop\n        /* \"#utility.yul\":6547:6640   */\n      tag_261\n        /* \"#utility.yul\":6636:6639   */\n      dup3\n        /* \"#utility.yul\":6547:6640   */\n      tag_181\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":6665:6667   */\n      0x20\n        /* \"#utility.yul\":6660:6663   */\n      dup3\n        /* \"#utility.yul\":6656:6668   */\n      add\n        /* \"#utility.yul\":6649:6668   */\n      swap1\n      pop\n        /* \"#utility.yul\":6308:6674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6680:7099   */\n    tag_83:\n        /* \"#utility.yul\":6846:6850   */\n      0x00\n        /* \"#utility.yul\":6884:6886   */\n      0x20\n        /* \"#utility.yul\":6873:6882   */\n      dup3\n        /* \"#utility.yul\":6869:6887   */\n      add\n        /* \"#utility.yul\":6861:6887   */\n      swap1\n      pop\n        /* \"#utility.yul\":6933:6942   */\n      dup2\n        /* \"#utility.yul\":6927:6931   */\n      dup2\n        /* \"#utility.yul\":6923:6943   */\n      sub\n        /* \"#utility.yul\":6919:6920   */\n      0x00\n        /* \"#utility.yul\":6908:6917   */\n      dup4\n        /* \"#utility.yul\":6904:6921   */\n      add\n        /* \"#utility.yul\":6897:6944   */\n      mstore\n        /* \"#utility.yul\":6961:7092   */\n      tag_263\n        /* \"#utility.yul\":7087:7091   */\n      dup2\n        /* \"#utility.yul\":6961:7092   */\n      tag_182\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":6953:7092   */\n      swap1\n      pop\n        /* \"#utility.yul\":6680:7099   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7105:7285   */\n    tag_183:\n        /* \"#utility.yul\":7153:7230   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7150:7151   */\n      0x00\n        /* \"#utility.yul\":7143:7231   */\n      mstore\n        /* \"#utility.yul\":7250:7254   */\n      0x11\n        /* \"#utility.yul\":7247:7248   */\n      0x04\n        /* \"#utility.yul\":7240:7255   */\n      mstore\n        /* \"#utility.yul\":7274:7278   */\n      0x24\n        /* \"#utility.yul\":7271:7272   */\n      0x00\n        /* \"#utility.yul\":7264:7279   */\n      revert\n        /* \"#utility.yul\":7291:7524   */\n    tag_86:\n        /* \"#utility.yul\":7330:7333   */\n      0x00\n        /* \"#utility.yul\":7353:7377   */\n      tag_266\n        /* \"#utility.yul\":7371:7376   */\n      dup3\n        /* \"#utility.yul\":7353:7377   */\n      tag_164\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":7344:7377   */\n      swap2\n      pop\n        /* \"#utility.yul\":7399:7465   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7392:7397   */\n      dup3\n        /* \"#utility.yul\":7389:7466   */\n      sub\n        /* \"#utility.yul\":7386:7489   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":7469:7487   */\n      tag_268\n      tag_183\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":7386:7489   */\n    tag_267:\n        /* \"#utility.yul\":7516:7517   */\n      0x01\n        /* \"#utility.yul\":7509:7514   */\n      dup3\n        /* \"#utility.yul\":7505:7518   */\n      add\n        /* \"#utility.yul\":7498:7518   */\n      swap1\n      pop\n        /* \"#utility.yul\":7291:7524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7530:7972   */\n    tag_88:\n        /* \"#utility.yul\":7679:7683   */\n      0x00\n        /* \"#utility.yul\":7717:7719   */\n      0x60\n        /* \"#utility.yul\":7706:7715   */\n      dup3\n        /* \"#utility.yul\":7702:7720   */\n      add\n        /* \"#utility.yul\":7694:7720   */\n      swap1\n      pop\n        /* \"#utility.yul\":7730:7801   */\n      tag_270\n        /* \"#utility.yul\":7798:7799   */\n      0x00\n        /* \"#utility.yul\":7787:7796   */\n      dup4\n        /* \"#utility.yul\":7783:7800   */\n      add\n        /* \"#utility.yul\":7774:7780   */\n      dup7\n        /* \"#utility.yul\":7730:7801   */\n      tag_170\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":7811:7883   */\n      tag_271\n        /* \"#utility.yul\":7879:7881   */\n      0x20\n        /* \"#utility.yul\":7868:7877   */\n      dup4\n        /* \"#utility.yul\":7864:7882   */\n      add\n        /* \"#utility.yul\":7855:7861   */\n      dup6\n        /* \"#utility.yul\":7811:7883   */\n      tag_167\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":7893:7965   */\n      tag_272\n        /* \"#utility.yul\":7961:7963   */\n      0x40\n        /* \"#utility.yul\":7950:7959   */\n      dup4\n        /* \"#utility.yul\":7946:7964   */\n      add\n        /* \"#utility.yul\":7937:7943   */\n      dup5\n        /* \"#utility.yul\":7893:7965   */\n      tag_167\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":7530:7972   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7978:8155   */\n    tag_184:\n        /* \"#utility.yul\":8118:8147   */\n      0x4f6e6c792073656c6c65722063616e2072656d6f7665206c6973740000000000\n        /* \"#utility.yul\":8114:8115   */\n      0x00\n        /* \"#utility.yul\":8106:8112   */\n      dup3\n        /* \"#utility.yul\":8102:8116   */\n      add\n        /* \"#utility.yul\":8095:8148   */\n      mstore\n        /* \"#utility.yul\":7978:8155   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8161:8527   */\n    tag_185:\n        /* \"#utility.yul\":8303:8306   */\n      0x00\n        /* \"#utility.yul\":8324:8391   */\n      tag_275\n        /* \"#utility.yul\":8388:8390   */\n      0x1b\n        /* \"#utility.yul\":8383:8386   */\n      dup4\n        /* \"#utility.yul\":8324:8391   */\n      tag_175\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":8317:8391   */\n      swap2\n      pop\n        /* \"#utility.yul\":8400:8493   */\n      tag_276\n        /* \"#utility.yul\":8489:8492   */\n      dup3\n        /* \"#utility.yul\":8400:8493   */\n      tag_184\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":8518:8520   */\n      0x20\n        /* \"#utility.yul\":8513:8516   */\n      dup3\n        /* \"#utility.yul\":8509:8521   */\n      add\n        /* \"#utility.yul\":8502:8521   */\n      swap1\n      pop\n        /* \"#utility.yul\":8161:8527   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8533:8952   */\n    tag_103:\n        /* \"#utility.yul\":8699:8703   */\n      0x00\n        /* \"#utility.yul\":8737:8739   */\n      0x20\n        /* \"#utility.yul\":8726:8735   */\n      dup3\n        /* \"#utility.yul\":8722:8740   */\n      add\n        /* \"#utility.yul\":8714:8740   */\n      swap1\n      pop\n        /* \"#utility.yul\":8786:8795   */\n      dup2\n        /* \"#utility.yul\":8780:8784   */\n      dup2\n        /* \"#utility.yul\":8776:8796   */\n      sub\n        /* \"#utility.yul\":8772:8773   */\n      0x00\n        /* \"#utility.yul\":8761:8770   */\n      dup4\n        /* \"#utility.yul\":8757:8774   */\n      add\n        /* \"#utility.yul\":8750:8797   */\n      mstore\n        /* \"#utility.yul\":8814:8945   */\n      tag_278\n        /* \"#utility.yul\":8940:8944   */\n      dup2\n        /* \"#utility.yul\":8814:8945   */\n      tag_185\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":8806:8945   */\n      swap1\n      pop\n        /* \"#utility.yul\":8533:8952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8958:9290   */\n    tag_105:\n        /* \"#utility.yul\":9079:9083   */\n      0x00\n        /* \"#utility.yul\":9117:9119   */\n      0x40\n        /* \"#utility.yul\":9106:9115   */\n      dup3\n        /* \"#utility.yul\":9102:9120   */\n      add\n        /* \"#utility.yul\":9094:9120   */\n      swap1\n      pop\n        /* \"#utility.yul\":9130:9201   */\n      tag_280\n        /* \"#utility.yul\":9198:9199   */\n      0x00\n        /* \"#utility.yul\":9187:9196   */\n      dup4\n        /* \"#utility.yul\":9183:9200   */\n      add\n        /* \"#utility.yul\":9174:9180   */\n      dup6\n        /* \"#utility.yul\":9130:9201   */\n      tag_170\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":9211:9283   */\n      tag_281\n        /* \"#utility.yul\":9279:9281   */\n      0x20\n        /* \"#utility.yul\":9268:9277   */\n      dup4\n        /* \"#utility.yul\":9264:9282   */\n      add\n        /* \"#utility.yul\":9255:9261   */\n      dup5\n        /* \"#utility.yul\":9211:9283   */\n      tag_167\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":8958:9290   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9296:9465   */\n    tag_186:\n        /* \"#utility.yul\":9436:9457   */\n      0x4e4654206973206e6f7420666f722073616c6500000000000000000000000000\n        /* \"#utility.yul\":9432:9433   */\n      0x00\n        /* \"#utility.yul\":9424:9430   */\n      dup3\n        /* \"#utility.yul\":9420:9434   */\n      add\n        /* \"#utility.yul\":9413:9458   */\n      mstore\n        /* \"#utility.yul\":9296:9465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9471:9837   */\n    tag_187:\n        /* \"#utility.yul\":9613:9616   */\n      0x00\n        /* \"#utility.yul\":9634:9701   */\n      tag_284\n        /* \"#utility.yul\":9698:9700   */\n      0x13\n        /* \"#utility.yul\":9693:9696   */\n      dup4\n        /* \"#utility.yul\":9634:9701   */\n      tag_175\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":9627:9701   */\n      swap2\n      pop\n        /* \"#utility.yul\":9710:9803   */\n      tag_285\n        /* \"#utility.yul\":9799:9802   */\n      dup3\n        /* \"#utility.yul\":9710:9803   */\n      tag_186\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":9828:9830   */\n      0x20\n        /* \"#utility.yul\":9823:9826   */\n      dup3\n        /* \"#utility.yul\":9819:9831   */\n      add\n        /* \"#utility.yul\":9812:9831   */\n      swap1\n      pop\n        /* \"#utility.yul\":9471:9837   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9843:10262   */\n    tag_109:\n        /* \"#utility.yul\":10009:10013   */\n      0x00\n        /* \"#utility.yul\":10047:10049   */\n      0x20\n        /* \"#utility.yul\":10036:10045   */\n      dup3\n        /* \"#utility.yul\":10032:10050   */\n      add\n        /* \"#utility.yul\":10024:10050   */\n      swap1\n      pop\n        /* \"#utility.yul\":10096:10105   */\n      dup2\n        /* \"#utility.yul\":10090:10094   */\n      dup2\n        /* \"#utility.yul\":10086:10106   */\n      sub\n        /* \"#utility.yul\":10082:10083   */\n      0x00\n        /* \"#utility.yul\":10071:10080   */\n      dup4\n        /* \"#utility.yul\":10067:10084   */\n      add\n        /* \"#utility.yul\":10060:10107   */\n      mstore\n        /* \"#utility.yul\":10124:10255   */\n      tag_287\n        /* \"#utility.yul\":10250:10254   */\n      dup2\n        /* \"#utility.yul\":10124:10255   */\n      tag_187\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":10116:10255   */\n      swap1\n      pop\n        /* \"#utility.yul\":9843:10262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10268:10442   */\n    tag_188:\n        /* \"#utility.yul\":10408:10434   */\n      0x496e636f7272656374207061796d656e7420616d6f756e740000000000000000\n        /* \"#utility.yul\":10404:10405   */\n      0x00\n        /* \"#utility.yul\":10396:10402   */\n      dup3\n        /* \"#utility.yul\":10392:10406   */\n      add\n        /* \"#utility.yul\":10385:10435   */\n      mstore\n        /* \"#utility.yul\":10268:10442   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10448:10814   */\n    tag_189:\n        /* \"#utility.yul\":10590:10593   */\n      0x00\n        /* \"#utility.yul\":10611:10678   */\n      tag_290\n        /* \"#utility.yul\":10675:10677   */\n      0x18\n        /* \"#utility.yul\":10670:10673   */\n      dup4\n        /* \"#utility.yul\":10611:10678   */\n      tag_175\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":10604:10678   */\n      swap2\n      pop\n        /* \"#utility.yul\":10687:10780   */\n      tag_291\n        /* \"#utility.yul\":10776:10779   */\n      dup3\n        /* \"#utility.yul\":10687:10780   */\n      tag_188\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":10805:10807   */\n      0x20\n        /* \"#utility.yul\":10800:10803   */\n      dup3\n        /* \"#utility.yul\":10796:10808   */\n      add\n        /* \"#utility.yul\":10789:10808   */\n      swap1\n      pop\n        /* \"#utility.yul\":10448:10814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10820:11239   */\n    tag_112:\n        /* \"#utility.yul\":10986:10990   */\n      0x00\n        /* \"#utility.yul\":11024:11026   */\n      0x20\n        /* \"#utility.yul\":11013:11022   */\n      dup3\n        /* \"#utility.yul\":11009:11027   */\n      add\n        /* \"#utility.yul\":11001:11027   */\n      swap1\n      pop\n        /* \"#utility.yul\":11073:11082   */\n      dup2\n        /* \"#utility.yul\":11067:11071   */\n      dup2\n        /* \"#utility.yul\":11063:11083   */\n      sub\n        /* \"#utility.yul\":11059:11060   */\n      0x00\n        /* \"#utility.yul\":11048:11057   */\n      dup4\n        /* \"#utility.yul\":11044:11061   */\n      add\n        /* \"#utility.yul\":11037:11084   */\n      mstore\n        /* \"#utility.yul\":11101:11232   */\n      tag_293\n        /* \"#utility.yul\":11227:11231   */\n      dup2\n        /* \"#utility.yul\":11101:11232   */\n      tag_189\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":11093:11232   */\n      swap1\n      pop\n        /* \"#utility.yul\":10820:11239   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11245:11687   */\n    tag_118:\n        /* \"#utility.yul\":11394:11398   */\n      0x00\n        /* \"#utility.yul\":11432:11434   */\n      0x60\n        /* \"#utility.yul\":11421:11430   */\n      dup3\n        /* \"#utility.yul\":11417:11435   */\n      add\n        /* \"#utility.yul\":11409:11435   */\n      swap1\n      pop\n        /* \"#utility.yul\":11445:11516   */\n      tag_295\n        /* \"#utility.yul\":11513:11514   */\n      0x00\n        /* \"#utility.yul\":11502:11511   */\n      dup4\n        /* \"#utility.yul\":11498:11515   */\n      add\n        /* \"#utility.yul\":11489:11495   */\n      dup7\n        /* \"#utility.yul\":11445:11516   */\n      tag_170\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":11526:11598   */\n      tag_296\n        /* \"#utility.yul\":11594:11596   */\n      0x20\n        /* \"#utility.yul\":11583:11592   */\n      dup4\n        /* \"#utility.yul\":11579:11597   */\n      add\n        /* \"#utility.yul\":11570:11576   */\n      dup6\n        /* \"#utility.yul\":11526:11598   */\n      tag_170\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":11608:11680   */\n      tag_297\n        /* \"#utility.yul\":11676:11678   */\n      0x40\n        /* \"#utility.yul\":11665:11674   */\n      dup4\n        /* \"#utility.yul\":11661:11679   */\n      add\n        /* \"#utility.yul\":11652:11658   */\n      dup5\n        /* \"#utility.yul\":11608:11680   */\n      tag_167\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":11245:11687   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11693:11887   */\n    tag_123:\n        /* \"#utility.yul\":11733:11737   */\n      0x00\n        /* \"#utility.yul\":11753:11773   */\n      tag_299\n        /* \"#utility.yul\":11771:11772   */\n      dup3\n        /* \"#utility.yul\":11753:11773   */\n      tag_164\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":11748:11773   */\n      swap2\n      pop\n        /* \"#utility.yul\":11787:11807   */\n      tag_300\n        /* \"#utility.yul\":11805:11806   */\n      dup4\n        /* \"#utility.yul\":11787:11807   */\n      tag_164\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":11782:11807   */\n      swap3\n      pop\n        /* \"#utility.yul\":11831:11832   */\n      dup3\n        /* \"#utility.yul\":11828:11829   */\n      dup3\n        /* \"#utility.yul\":11824:11833   */\n      sub\n        /* \"#utility.yul\":11816:11833   */\n      swap1\n      pop\n        /* \"#utility.yul\":11855:11856   */\n      dup2\n        /* \"#utility.yul\":11849:11853   */\n      dup2\n        /* \"#utility.yul\":11846:11857   */\n      gt\n        /* \"#utility.yul\":11843:11880   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":11860:11878   */\n      tag_302\n      tag_183\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":11843:11880   */\n    tag_301:\n        /* \"#utility.yul\":11693:11887   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11893:12303   */\n    tag_125:\n        /* \"#utility.yul\":11933:11940   */\n      0x00\n        /* \"#utility.yul\":11956:11976   */\n      tag_304\n        /* \"#utility.yul\":11974:11975   */\n      dup3\n        /* \"#utility.yul\":11956:11976   */\n      tag_164\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":11951:11976   */\n      swap2\n      pop\n        /* \"#utility.yul\":11990:12010   */\n      tag_305\n        /* \"#utility.yul\":12008:12009   */\n      dup4\n        /* \"#utility.yul\":11990:12010   */\n      tag_164\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":11985:12010   */\n      swap3\n      pop\n        /* \"#utility.yul\":12045:12046   */\n      dup3\n        /* \"#utility.yul\":12042:12043   */\n      dup3\n        /* \"#utility.yul\":12038:12047   */\n      mul\n        /* \"#utility.yul\":12067:12097   */\n      tag_306\n        /* \"#utility.yul\":12085:12096   */\n      dup2\n        /* \"#utility.yul\":12067:12097   */\n      tag_164\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":12056:12097   */\n      swap2\n      pop\n        /* \"#utility.yul\":12246:12247   */\n      dup3\n        /* \"#utility.yul\":12237:12244   */\n      dup3\n        /* \"#utility.yul\":12233:12248   */\n      div\n        /* \"#utility.yul\":12230:12231   */\n      dup5\n        /* \"#utility.yul\":12227:12249   */\n      eq\n        /* \"#utility.yul\":12207:12208   */\n      dup4\n        /* \"#utility.yul\":12200:12209   */\n      iszero\n        /* \"#utility.yul\":12180:12263   */\n      or\n        /* \"#utility.yul\":12157:12296   */\n      tag_307\n      jumpi\n        /* \"#utility.yul\":12276:12294   */\n      tag_308\n      tag_183\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":12157:12296   */\n    tag_307:\n        /* \"#utility.yul\":11941:12303   */\n      pop\n        /* \"#utility.yul\":11893:12303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12309:12489   */\n    tag_190:\n        /* \"#utility.yul\":12357:12434   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12354:12355   */\n      0x00\n        /* \"#utility.yul\":12347:12435   */\n      mstore\n        /* \"#utility.yul\":12454:12458   */\n      0x12\n        /* \"#utility.yul\":12451:12452   */\n      0x04\n        /* \"#utility.yul\":12444:12459   */\n      mstore\n        /* \"#utility.yul\":12478:12482   */\n      0x24\n        /* \"#utility.yul\":12475:12476   */\n      0x00\n        /* \"#utility.yul\":12468:12483   */\n      revert\n        /* \"#utility.yul\":12495:12680   */\n    tag_127:\n        /* \"#utility.yul\":12535:12536   */\n      0x00\n        /* \"#utility.yul\":12552:12572   */\n      tag_311\n        /* \"#utility.yul\":12570:12571   */\n      dup3\n        /* \"#utility.yul\":12552:12572   */\n      tag_164\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":12547:12572   */\n      swap2\n      pop\n        /* \"#utility.yul\":12586:12606   */\n      tag_312\n        /* \"#utility.yul\":12604:12605   */\n      dup4\n        /* \"#utility.yul\":12586:12606   */\n      tag_164\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":12581:12606   */\n      swap3\n      pop\n        /* \"#utility.yul\":12625:12626   */\n      dup3\n        /* \"#utility.yul\":12615:12650   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":12630:12648   */\n      tag_314\n      tag_190\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":12615:12650   */\n    tag_313:\n        /* \"#utility.yul\":12672:12673   */\n      dup3\n        /* \"#utility.yul\":12669:12670   */\n      dup3\n        /* \"#utility.yul\":12665:12674   */\n      div\n        /* \"#utility.yul\":12660:12674   */\n      swap1\n      pop\n        /* \"#utility.yul\":12495:12680   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12686:13239   */\n    tag_131:\n        /* \"#utility.yul\":12863:12867   */\n      0x00\n        /* \"#utility.yul\":12901:12904   */\n      0x80\n        /* \"#utility.yul\":12890:12899   */\n      dup3\n        /* \"#utility.yul\":12886:12905   */\n      add\n        /* \"#utility.yul\":12878:12905   */\n      swap1\n      pop\n        /* \"#utility.yul\":12915:12986   */\n      tag_316\n        /* \"#utility.yul\":12983:12984   */\n      0x00\n        /* \"#utility.yul\":12972:12981   */\n      dup4\n        /* \"#utility.yul\":12968:12985   */\n      add\n        /* \"#utility.yul\":12959:12965   */\n      dup8\n        /* \"#utility.yul\":12915:12986   */\n      tag_170\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":12996:13068   */\n      tag_317\n        /* \"#utility.yul\":13064:13066   */\n      0x20\n        /* \"#utility.yul\":13053:13062   */\n      dup4\n        /* \"#utility.yul\":13049:13067   */\n      add\n        /* \"#utility.yul\":13040:13046   */\n      dup7\n        /* \"#utility.yul\":12996:13068   */\n      tag_170\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":13078:13150   */\n      tag_318\n        /* \"#utility.yul\":13146:13148   */\n      0x40\n        /* \"#utility.yul\":13135:13144   */\n      dup4\n        /* \"#utility.yul\":13131:13149   */\n      add\n        /* \"#utility.yul\":13122:13128   */\n      dup6\n        /* \"#utility.yul\":13078:13150   */\n      tag_167\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":13160:13232   */\n      tag_319\n        /* \"#utility.yul\":13228:13230   */\n      0x60\n        /* \"#utility.yul\":13217:13226   */\n      dup4\n        /* \"#utility.yul\":13213:13231   */\n      add\n        /* \"#utility.yul\":13204:13210   */\n      dup5\n        /* \"#utility.yul\":13160:13232   */\n      tag_167\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":12686:13239   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13245:13470   */\n    tag_191:\n        /* \"#utility.yul\":13385:13419   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":13381:13382   */\n      0x00\n        /* \"#utility.yul\":13373:13379   */\n      dup3\n        /* \"#utility.yul\":13369:13383   */\n      add\n        /* \"#utility.yul\":13362:13420   */\n      mstore\n        /* \"#utility.yul\":13454:13462   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13449:13451   */\n      0x20\n        /* \"#utility.yul\":13441:13447   */\n      dup3\n        /* \"#utility.yul\":13437:13452   */\n      add\n        /* \"#utility.yul\":13430:13463   */\n      mstore\n        /* \"#utility.yul\":13245:13470   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13476:13842   */\n    tag_192:\n        /* \"#utility.yul\":13618:13621   */\n      0x00\n        /* \"#utility.yul\":13639:13706   */\n      tag_322\n        /* \"#utility.yul\":13703:13705   */\n      0x26\n        /* \"#utility.yul\":13698:13701   */\n      dup4\n        /* \"#utility.yul\":13639:13706   */\n      tag_175\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":13632:13706   */\n      swap2\n      pop\n        /* \"#utility.yul\":13715:13808   */\n      tag_323\n        /* \"#utility.yul\":13804:13807   */\n      dup3\n        /* \"#utility.yul\":13715:13808   */\n      tag_191\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":13833:13835   */\n      0x40\n        /* \"#utility.yul\":13828:13831   */\n      dup3\n        /* \"#utility.yul\":13824:13836   */\n      add\n        /* \"#utility.yul\":13817:13836   */\n      swap1\n      pop\n        /* \"#utility.yul\":13476:13842   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13848:14267   */\n    tag_150:\n        /* \"#utility.yul\":14014:14018   */\n      0x00\n        /* \"#utility.yul\":14052:14054   */\n      0x20\n        /* \"#utility.yul\":14041:14050   */\n      dup3\n        /* \"#utility.yul\":14037:14055   */\n      add\n        /* \"#utility.yul\":14029:14055   */\n      swap1\n      pop\n        /* \"#utility.yul\":14101:14110   */\n      dup2\n        /* \"#utility.yul\":14095:14099   */\n      dup2\n        /* \"#utility.yul\":14091:14111   */\n      sub\n        /* \"#utility.yul\":14087:14088   */\n      0x00\n        /* \"#utility.yul\":14076:14085   */\n      dup4\n        /* \"#utility.yul\":14072:14089   */\n      add\n        /* \"#utility.yul\":14065:14112   */\n      mstore\n        /* \"#utility.yul\":14129:14260   */\n      tag_325\n        /* \"#utility.yul\":14255:14259   */\n      dup2\n        /* \"#utility.yul\":14129:14260   */\n      tag_192\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":14121:14260   */\n      swap1\n      pop\n        /* \"#utility.yul\":13848:14267   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14273:14455   */\n    tag_193:\n        /* \"#utility.yul\":14413:14447   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":14409:14410   */\n      0x00\n        /* \"#utility.yul\":14401:14407   */\n      dup3\n        /* \"#utility.yul\":14397:14411   */\n      add\n        /* \"#utility.yul\":14390:14448   */\n      mstore\n        /* \"#utility.yul\":14273:14455   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14461:14827   */\n    tag_194:\n        /* \"#utility.yul\":14603:14606   */\n      0x00\n        /* \"#utility.yul\":14624:14691   */\n      tag_328\n        /* \"#utility.yul\":14688:14690   */\n      0x20\n        /* \"#utility.yul\":14683:14686   */\n      dup4\n        /* \"#utility.yul\":14624:14691   */\n      tag_175\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":14617:14691   */\n      swap2\n      pop\n        /* \"#utility.yul\":14700:14793   */\n      tag_329\n        /* \"#utility.yul\":14789:14792   */\n      dup3\n        /* \"#utility.yul\":14700:14793   */\n      tag_193\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":14818:14820   */\n      0x20\n        /* \"#utility.yul\":14813:14816   */\n      dup3\n        /* \"#utility.yul\":14809:14821   */\n      add\n        /* \"#utility.yul\":14802:14821   */\n      swap1\n      pop\n        /* \"#utility.yul\":14461:14827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14833:15252   */\n    tag_158:\n        /* \"#utility.yul\":14999:15003   */\n      0x00\n        /* \"#utility.yul\":15037:15039   */\n      0x20\n        /* \"#utility.yul\":15026:15035   */\n      dup3\n        /* \"#utility.yul\":15022:15040   */\n      add\n        /* \"#utility.yul\":15014:15040   */\n      swap1\n      pop\n        /* \"#utility.yul\":15086:15095   */\n      dup2\n        /* \"#utility.yul\":15080:15084   */\n      dup2\n        /* \"#utility.yul\":15076:15096   */\n      sub\n        /* \"#utility.yul\":15072:15073   */\n      0x00\n        /* \"#utility.yul\":15061:15070   */\n      dup4\n        /* \"#utility.yul\":15057:15074   */\n      add\n        /* \"#utility.yul\":15050:15097   */\n      mstore\n        /* \"#utility.yul\":15114:15245   */\n      tag_331\n        /* \"#utility.yul\":15240:15244   */\n      dup2\n        /* \"#utility.yul\":15114:15245   */\n      tag_194\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":15106:15245   */\n      swap1\n      pop\n        /* \"#utility.yul\":14833:15252   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208688e00aa654a5064ce53ad94932cb3e84dcbc49c08538f2efb080e8f5fa88d764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 60,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 68,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526000600155600060025534801561001a57600080fd5b5061003761002c61003c60201b60201c565b61004460201b60201c565b610108565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61141c806101176000396000f3fe6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b1461018557806396032702146101b057806397492c46146101ed578063b0d54bcf1461022a578063c84c038714610253578063f2fde38b1461027e576100a7565b806326d8fde2146100ac5780633ccfd60b146100d557806344e797e9146100ec57806351ed8288146101155780636089880114610131578063715018a61461016e575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190610c62565b6102a7565b005b3480156100e157600080fd5b506100ea6104ee565b005b3480156100f857600080fd5b50610113600480360381019061010e9190610ca2565b610546565b005b61012f600480360381019061012a9190610ca2565b6106a2565b005b34801561013d57600080fd5b5061015860048036038101906101539190610ca2565b610948565b6040516101659190610cde565b60405180910390f35b34801561017a57600080fd5b50610183610960565b005b34801561019157600080fd5b5061019a610974565b6040516101a79190610d3a565b60405180910390f35b3480156101bc57600080fd5b506101d760048036038101906101d29190610ca2565b61099d565b6040516101e49190610cde565b60405180910390f35b3480156101f957600080fd5b50610214600480360381019061020f9190610d81565b6109b5565b6040516102219190610dc9565b60405180910390f35b34801561023657600080fd5b50610251600480360381019061024c9190610ca2565b610a42565b005b34801561025f57600080fd5b50610268610a54565b6040516102759190610cde565b60405180910390f35b34801561028a57600080fd5b506102a560048036038101906102a09190610d81565b610a5a565b005b600081116102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e190610e41565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016103459190610cde565b602060405180830381865afa158015610362573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103869190610e76565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ea90610eef565b60405180910390fd5b6000600360008481526020019081526020016000205414610449576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044090610f5b565b60405180910390fd5b80600360008481526020019081526020016000208190555060006004600084815260200190815260200160002054036104af576002600081548092919061048f90610faa565b919050555060025460046000848152602001908152602001600020819055505b7fa6a83f41a222e54496abc9714714160fa0ea96150ffdb4aebaf93e3054baa9423383836040516104e293929190610ff2565b60405180910390a15050565b6104f6610add565b6104fe610974565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610543573d6000803e3d6000fd5b50565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b81526004016105a19190610cde565b602060405180830381865afa1580156105be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e29190610e76565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461064f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064690611075565b60405180910390fd5b60036000828152602001908152602001600020600090557fcde58bc7bff2645d4598b3ef8da25103b048f9904835655d853e614095d7f2ab3382604051610697929190611095565b60405180910390a150565b60006003600083815260200190815260200160002054036106f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ef9061110a565b60405180910390fd5b600060036000838152602001908152602001600020549050803414610752576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074990611176565b60405180910390fd5b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016107af9190610cde565b602060405180830381865afa1580156107cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f09190610e76565b9050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e8233866040518463ffffffff1660e01b815260040161085193929190611196565b600060405180830381600087803b15801561086b57600080fd5b505af115801561087f573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff166108fc606460015460646108ae91906111cd565b346108b99190611201565b6108c39190611272565b9081150290604051600060405180830381858888f193505050501580156108ee573d6000803e3d6000fd5b5060036000848152602001908152602001600020600090557fe35677743c6b7abf01cca38cf0f4b986386e50105ec5fd3f42daeea57acf57a98133858560405161093b94939291906112a3565b60405180910390a1505050565b60046020528060005260406000206000915090505481565b610968610add565b6109726000610b5b565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036020528060005260406000206000915090505481565b60006109bf610add565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109f857600080fd5b81600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b610a4a610add565b8060018190555050565b60025481565b610a62610add565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ad1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac89061135a565b60405180910390fd5b610ada81610b5b565b50565b610ae5610c1f565b73ffffffffffffffffffffffffffffffffffffffff16610b03610974565b73ffffffffffffffffffffffffffffffffffffffff1614610b59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b50906113c6565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b610c3f81610c2c565b8114610c4a57600080fd5b50565b600081359050610c5c81610c36565b92915050565b60008060408385031215610c7957610c78610c27565b5b6000610c8785828601610c4d565b9250506020610c9885828601610c4d565b9150509250929050565b600060208284031215610cb857610cb7610c27565b5b6000610cc684828501610c4d565b91505092915050565b610cd881610c2c565b82525050565b6000602082019050610cf36000830184610ccf565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d2482610cf9565b9050919050565b610d3481610d19565b82525050565b6000602082019050610d4f6000830184610d2b565b92915050565b610d5e81610d19565b8114610d6957600080fd5b50565b600081359050610d7b81610d55565b92915050565b600060208284031215610d9757610d96610c27565b5b6000610da584828501610d6c565b91505092915050565b60008115159050919050565b610dc381610dae565b82525050565b6000602082019050610dde6000830184610dba565b92915050565b600082825260208201905092915050565b7f5072696365206d7573742062652067726561746572207468616e207a65726f00600082015250565b6000610e2b601f83610de4565b9150610e3682610df5565b602082019050919050565b60006020820190508181036000830152610e5a81610e1e565b9050919050565b600081519050610e7081610d55565b92915050565b600060208284031215610e8c57610e8b610c27565b5b6000610e9a84828501610e61565b91505092915050565b7f43616c6c6572206973206e6f742020746f6b656e206f776e6572210000000000600082015250565b6000610ed9601b83610de4565b9150610ee482610ea3565b602082019050919050565b60006020820190508181036000830152610f0881610ecc565b9050919050565b7f5468697320746f6b656e20697320616c7265616479206f6e2073616c65000000600082015250565b6000610f45601d83610de4565b9150610f5082610f0f565b602082019050919050565b60006020820190508181036000830152610f7481610f38565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fb582610c2c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610fe757610fe6610f7b565b5b600182019050919050565b60006060820190506110076000830186610d2b565b6110146020830185610ccf565b6110216040830184610ccf565b949350505050565b7f4f6e6c792073656c6c65722063616e2072656d6f7665206c6973740000000000600082015250565b600061105f601b83610de4565b915061106a82611029565b602082019050919050565b6000602082019050818103600083015261108e81611052565b9050919050565b60006040820190506110aa6000830185610d2b565b6110b76020830184610ccf565b9392505050565b7f4e4654206973206e6f7420666f722073616c6500000000000000000000000000600082015250565b60006110f4601383610de4565b91506110ff826110be565b602082019050919050565b60006020820190508181036000830152611123816110e7565b9050919050565b7f496e636f7272656374207061796d656e7420616d6f756e740000000000000000600082015250565b6000611160601883610de4565b915061116b8261112a565b602082019050919050565b6000602082019050818103600083015261118f81611153565b9050919050565b60006060820190506111ab6000830186610d2b565b6111b86020830185610d2b565b6111c56040830184610ccf565b949350505050565b60006111d882610c2c565b91506111e383610c2c565b92508282039050818111156111fb576111fa610f7b565b5b92915050565b600061120c82610c2c565b915061121783610c2c565b925082820261122581610c2c565b9150828204841483151761123c5761123b610f7b565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061127d82610c2c565b915061128883610c2c565b92508261129857611297611243565b5b828204905092915050565b60006080820190506112b86000830187610d2b565b6112c56020830186610d2b565b6112d26040830185610ccf565b6112df6060830184610ccf565b95945050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611344602683610de4565b915061134f826112e8565b604082019050919050565b6000602082019050818103600083015261137381611337565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006113b0602083610de4565b91506113bb8261137a565b602082019050919050565b600060208201905081810360008301526113df816113a3565b905091905056fea26469706673582212208688e00aa654a5064ce53ad94932cb3e84dcbc49c08538f2efb080e8f5fa88d764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x1 SSTORE PUSH1 0x0 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37 PUSH2 0x2C PUSH2 0x3C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x44 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x141C DUP1 PUSH2 0x117 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x96032702 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x97492C46 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xB0D54BCF EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xC84C0387 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27E JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x26D8FDE2 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x44E797E9 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x51ED8288 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x60898801 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x16E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x2A7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA PUSH2 0x4EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x153 SWAP2 SWAP1 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x948 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x960 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x974 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x99D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0xD81 JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0xDC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0xA54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0xD81 JUMP JUMPDEST PUSH2 0xA5A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0xE41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x345 SWAP2 SWAP1 PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x362 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EA SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x449 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x440 SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x4AF JUMPI PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x48F SWAP1 PUSH2 0xFAA JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x2 SLOAD PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH32 0xA6A83F41A222E54496ABC9714714160FA0EA96150FFDB4AEBAF93E3054BAA942 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4E2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x4F6 PUSH2 0xADD JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x974 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x543 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x64F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x646 SWAP1 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH32 0xCDE58BC7BFF2645D4598B3EF8DA25103B048F9904835655D853E614095D7F2AB CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x697 SWAP3 SWAP2 SWAP1 PUSH2 0x1095 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x6F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EF SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 CALLVALUE EQ PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP2 SWAP1 PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F0 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E DUP3 CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x851 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x86B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x87F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x64 PUSH1 0x1 SLOAD PUSH1 0x64 PUSH2 0x8AE SWAP2 SWAP1 PUSH2 0x11CD JUMP JUMPDEST CALLVALUE PUSH2 0x8B9 SWAP2 SWAP1 PUSH2 0x1201 JUMP JUMPDEST PUSH2 0x8C3 SWAP2 SWAP1 PUSH2 0x1272 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH32 0xE35677743C6B7ABF01CCA38CF0F4B986386E50105EC5FD3F42DAEEA57ACF57A9 DUP2 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x93B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x968 PUSH2 0xADD JUMP JUMPDEST PUSH2 0x972 PUSH1 0x0 PUSH2 0xB5B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9BF PUSH2 0xADD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA4A PUSH2 0xADD JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA62 PUSH2 0xADD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC8 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xADA DUP2 PUSH2 0xB5B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xAE5 PUSH2 0xC1F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB03 PUSH2 0x974 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP1 PUSH2 0x13C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3F DUP2 PUSH2 0xC2C JUMP JUMPDEST DUP2 EQ PUSH2 0xC4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC5C DUP2 PUSH2 0xC36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC79 JUMPI PUSH2 0xC78 PUSH2 0xC27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC87 DUP6 DUP3 DUP7 ADD PUSH2 0xC4D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC98 DUP6 DUP3 DUP7 ADD PUSH2 0xC4D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB8 JUMPI PUSH2 0xCB7 PUSH2 0xC27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCC6 DUP5 DUP3 DUP6 ADD PUSH2 0xC4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCD8 DUP2 PUSH2 0xC2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD24 DUP3 PUSH2 0xCF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD34 DUP2 PUSH2 0xD19 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD4F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD5E DUP2 PUSH2 0xD19 JUMP JUMPDEST DUP2 EQ PUSH2 0xD69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD7B DUP2 PUSH2 0xD55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD97 JUMPI PUSH2 0xD96 PUSH2 0xC27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDA5 DUP5 DUP3 DUP6 ADD PUSH2 0xD6C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC3 DUP2 PUSH2 0xDAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5072696365206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2B PUSH1 0x1F DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0xE36 DUP3 PUSH2 0xDF5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE5A DUP2 PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE70 DUP2 PUSH2 0xD55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE8C JUMPI PUSH2 0xE8B PUSH2 0xC27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE9A DUP5 DUP3 DUP6 ADD PUSH2 0xE61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F742020746F6B656E206F776E6572210000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED9 PUSH1 0x1B DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0xEE4 DUP3 PUSH2 0xEA3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF08 DUP2 PUSH2 0xECC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468697320746F6B656E20697320616C7265616479206F6E2073616C65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF45 PUSH1 0x1D DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0xF50 DUP3 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF74 DUP2 PUSH2 0xF38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFB5 DUP3 PUSH2 0xC2C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xFE7 JUMPI PUSH2 0xFE6 PUSH2 0xF7B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1007 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x1014 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCCF JUMP JUMPDEST PUSH2 0x1021 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCCF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792073656C6C65722063616E2072656D6F7665206C6973740000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105F PUSH1 0x1B DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x106A DUP3 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x108E DUP2 PUSH2 0x1052 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10AA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x10B7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCCF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E4654206973206E6F7420666F722073616C6500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F4 PUSH1 0x13 DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x10FF DUP3 PUSH2 0x10BE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1123 DUP2 PUSH2 0x10E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F7272656374207061796D656E7420616D6F756E740000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1160 PUSH1 0x18 DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x116B DUP3 PUSH2 0x112A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x118F DUP2 PUSH2 0x1153 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11AB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x11B8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x11C5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCCF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D8 DUP3 PUSH2 0xC2C JUMP JUMPDEST SWAP2 POP PUSH2 0x11E3 DUP4 PUSH2 0xC2C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x11FB JUMPI PUSH2 0x11FA PUSH2 0xF7B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120C DUP3 PUSH2 0xC2C JUMP JUMPDEST SWAP2 POP PUSH2 0x1217 DUP4 PUSH2 0xC2C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1225 DUP2 PUSH2 0xC2C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x123C JUMPI PUSH2 0x123B PUSH2 0xF7B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x127D DUP3 PUSH2 0xC2C JUMP JUMPDEST SWAP2 POP PUSH2 0x1288 DUP4 PUSH2 0xC2C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1298 JUMPI PUSH2 0x1297 PUSH2 0x1243 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x12B8 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x12C5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x12D2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xCCF JUMP JUMPDEST PUSH2 0x12DF PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xCCF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1344 PUSH1 0x26 DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x134F DUP3 PUSH2 0x12E8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1373 DUP2 PUSH2 0x1337 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B0 PUSH1 0x20 DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x13BB DUP3 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13DF DUP2 PUSH2 0x13A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 DUP9 0xE0 EXP 0xA6 SLOAD 0xA5 MOD 0x4C 0xE5 GASPRICE 0xD9 0x49 ORIGIN 0xCB RETURNDATACOPY DUP5 0xDC 0xBC 0x49 0xC0 DUP6 CODESIZE CALLCODE 0xEF 0xB0 DUP1 0xE8 CREATE2 STATICCALL DUP9 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "458:2909:3:-:0;;;797:1;776:22;;828:1;804:25;;458:2909;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;458:2909:3;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;458:2909:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 2781,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 3103,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 2907,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyNFT_678": {
									"entryPoint": 1698,
									"id": 678,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 2420,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeSale_706": {
									"entryPoint": 1350,
									"id": 706,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 2400,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@saleIdToTokenId_510": {
									"entryPoint": 2376,
									"id": 510,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@saleId_502": {
									"entryPoint": 2644,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@saleNFT_604": {
									"entryPoint": 679,
									"id": 604,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sale_506": {
									"entryPoint": 2461,
									"id": 506,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setInterface_540": {
									"entryPoint": 2485,
									"id": 540,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setTradingFee_718": {
									"entryPoint": 2626,
									"id": 718,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 2650,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_737": {
									"entryPoint": 1262,
									"id": 737,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 3681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 3702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_09dd53b62676719b8040611347978192842d176f40ffbc2b8a147e39c69a644c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e2afe0ce36414889a12a4f80007074ded6aba61b23cf3ead7274e914ffc0c83f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e78d8339bea1951bddddab05544b8ef190d674139511ac28e7e1f3d57ef72f6d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4502,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4771,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4245,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4082,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_09dd53b62676719b8040611347978192842d176f40ffbc2b8a147e39c69a644c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e2afe0ce36414889a12a4f80007074ded6aba61b23cf3ead7274e914ffc0c83f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e78d8339bea1951bddddab05544b8ef190d674139511ac28e7e1f3d57ef72f6d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3963,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4675,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3111,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_09dd53b62676719b8040611347978192842d176f40ffbc2b8a147e39c69a644c": {
									"entryPoint": 4137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0": {
									"entryPoint": 3573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 4840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d": {
									"entryPoint": 4394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738": {
									"entryPoint": 4286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e2afe0ce36414889a12a4f80007074ded6aba61b23cf3ead7274e914ffc0c83f": {
									"entryPoint": 3855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e78d8339bea1951bddddab05544b8ef190d674139511ac28e7e1f3d57ef72f6d": {
									"entryPoint": 3747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15255:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:4"
															},
															"nodeType": "YulIf",
															"src": "470:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:4",
														"type": ""
													}
												],
												"src": "417:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:4",
														"type": ""
													}
												],
												"src": "545:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "773:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "819:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "821:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "821:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "821:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "815:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "786:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:32:4"
															},
															"nodeType": "YulIf",
															"src": "783:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "912:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "927:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "941:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "931:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "956:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "991:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1002:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "966:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "966:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "956:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1039:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1054:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1058:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1084:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1119:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1130:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1115:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1115:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1139:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1094:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1094:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1084:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "735:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "746:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "758:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "766:6:4",
														"type": ""
													}
												],
												"src": "690:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1236:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1282:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1284:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1284:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1284:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1257:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1266:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1253:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1253:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1278:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1249:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:32:4"
															},
															"nodeType": "YulIf",
															"src": "1246:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1375:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1390:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1404:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1394:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1419:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1454:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1465:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1450:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1450:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1474:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1429:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1429:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1419:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1206:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1217:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1229:6:4",
														"type": ""
													}
												],
												"src": "1170:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1570:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1587:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1610:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1592:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1592:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1580:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1580:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1580:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1558:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1565:3:4",
														"type": ""
													}
												],
												"src": "1505:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1727:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1737:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1749:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1760:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1745:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1745:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1737:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1830:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1841:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1826:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1826:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1773:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1773:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1773:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1699:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1711:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1722:4:4",
														"type": ""
													}
												],
												"src": "1629:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1902:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1912:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1927:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1934:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1923:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1923:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1912:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1884:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1894:7:4",
														"type": ""
													}
												],
												"src": "1857:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2034:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2044:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2073:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2055:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2055:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2044:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2016:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2026:7:4",
														"type": ""
													}
												],
												"src": "1989:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2156:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2173:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2196:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2178:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2178:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2166:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2166:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2166:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2144:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2151:3:4",
														"type": ""
													}
												],
												"src": "2091:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2313:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2323:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2335:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2346:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2331:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2331:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2323:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2403:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2416:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2427:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2412:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2412:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2359:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2359:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2359:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2285:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2297:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2308:4:4",
														"type": ""
													}
												],
												"src": "2215:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2486:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2543:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2552:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2555:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2545:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2545:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2545:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2509:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2534:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2516:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2516:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2506:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2506:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2499:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2499:43:4"
															},
															"nodeType": "YulIf",
															"src": "2496:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2479:5:4",
														"type": ""
													}
												],
												"src": "2443:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2623:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2633:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2655:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2642:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2642:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2633:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2698:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2671:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2671:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2671:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2601:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2609:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2617:5:4",
														"type": ""
													}
												],
												"src": "2571:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2782:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2828:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2830:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2830:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2830:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2803:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2812:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2799:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2799:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2824:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2795:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2795:32:4"
															},
															"nodeType": "YulIf",
															"src": "2792:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2921:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2936:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2950:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2940:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2965:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3000:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3011:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2996:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2996:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3020:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2975:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2975:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2965:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2752:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2763:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2775:6:4",
														"type": ""
													}
												],
												"src": "2716:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3093:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3103:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3128:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3121:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3121:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3114:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3103:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3075:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3085:7:4",
														"type": ""
													}
												],
												"src": "3051:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3206:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3223:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3243:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3228:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3228:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3216:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3216:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3216:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3194:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3201:3:4",
														"type": ""
													}
												],
												"src": "3147:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3354:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3364:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3376:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3387:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3372:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3372:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3364:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3438:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3451:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3462:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3447:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3447:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3400:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3400:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3400:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3326:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3338:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3349:4:4",
														"type": ""
													}
												],
												"src": "3262:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3574:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3591:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3596:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3584:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3584:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3584:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3612:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3631:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3636:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3627:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3612:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3546:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3551:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3562:11:4",
														"type": ""
													}
												],
												"src": "3478:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3759:75:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3781:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3789:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3777:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3777:14:4"
																	},
																	{
																		"hexValue": "5072696365206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3793:33:4",
																		"type": "",
																		"value": "Price must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3770:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3770:57:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3770:57:4"
														}
													]
												},
												"name": "store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3751:6:4",
														"type": ""
													}
												],
												"src": "3653:181:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3986:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3996:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4062:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4067:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4003:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4003:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3996:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4168:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																	"nodeType": "YulIdentifier",
																	"src": "4079:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4079:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4079:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4181:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4192:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4197:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4188:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4188:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4181:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3974:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3982:3:4",
														"type": ""
													}
												],
												"src": "3840:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4383:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4393:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4405:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4416:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4401:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4401:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4393:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4440:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4451:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4436:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4436:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4459:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4465:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4429:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4429:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4429:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4485:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4619:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4493:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4493:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4485:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4363:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4378:4:4",
														"type": ""
													}
												],
												"src": "4212:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4700:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4710:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4725:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4719:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4719:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4710:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4768:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4741:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4741:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4741:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4678:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4686:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4694:5:4",
														"type": ""
													}
												],
												"src": "4637:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4863:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4909:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4911:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4911:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4911:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4884:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4893:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4880:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4880:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4905:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4876:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4876:32:4"
															},
															"nodeType": "YulIf",
															"src": "4873:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "5002:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5017:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5031:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5021:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5046:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5092:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5103:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5088:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5088:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5112:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5056:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5056:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5046:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4833:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4844:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4856:6:4",
														"type": ""
													}
												],
												"src": "4786:351:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5249:71:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5271:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5279:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5267:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5267:14:4"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f742020746f6b656e206f776e657221",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5283:29:4",
																		"type": "",
																		"value": "Caller is not  token owner!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5260:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5260:53:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5260:53:4"
														}
													]
												},
												"name": "store_literal_in_memory_e78d8339bea1951bddddab05544b8ef190d674139511ac28e7e1f3d57ef72f6d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5241:6:4",
														"type": ""
													}
												],
												"src": "5143:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5472:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5482:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5548:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5553:2:4",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5489:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5489:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5482:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5654:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e78d8339bea1951bddddab05544b8ef190d674139511ac28e7e1f3d57ef72f6d",
																	"nodeType": "YulIdentifier",
																	"src": "5565:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5565:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5565:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5667:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5678:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5683:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5674:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5667:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e78d8339bea1951bddddab05544b8ef190d674139511ac28e7e1f3d57ef72f6d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5460:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5468:3:4",
														"type": ""
													}
												],
												"src": "5326:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5869:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5879:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5891:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5902:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5887:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5887:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5879:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5926:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5937:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5922:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5922:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5945:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5951:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5941:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5941:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5915:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5915:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5971:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6105:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e78d8339bea1951bddddab05544b8ef190d674139511ac28e7e1f3d57ef72f6d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5979:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5979:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5971:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e78d8339bea1951bddddab05544b8ef190d674139511ac28e7e1f3d57ef72f6d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5849:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5864:4:4",
														"type": ""
													}
												],
												"src": "5698:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6229:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6251:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6259:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6247:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6247:14:4"
																	},
																	{
																		"hexValue": "5468697320746f6b656e20697320616c7265616479206f6e2073616c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6263:31:4",
																		"type": "",
																		"value": "This token is already on sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6240:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6240:55:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6240:55:4"
														}
													]
												},
												"name": "store_literal_in_memory_e2afe0ce36414889a12a4f80007074ded6aba61b23cf3ead7274e914ffc0c83f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6221:6:4",
														"type": ""
													}
												],
												"src": "6123:179:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6454:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6464:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6530:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6535:2:4",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6471:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6471:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6464:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6636:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e2afe0ce36414889a12a4f80007074ded6aba61b23cf3ead7274e914ffc0c83f",
																	"nodeType": "YulIdentifier",
																	"src": "6547:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6547:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6547:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6649:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6660:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6665:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6656:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6656:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6649:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e2afe0ce36414889a12a4f80007074ded6aba61b23cf3ead7274e914ffc0c83f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6442:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6450:3:4",
														"type": ""
													}
												],
												"src": "6308:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6851:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6861:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6873:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6884:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6869:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6869:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6861:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6908:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6919:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6904:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6904:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6927:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6933:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6923:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6923:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6897:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6897:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6897:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6953:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7087:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e2afe0ce36414889a12a4f80007074ded6aba61b23cf3ead7274e914ffc0c83f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6961:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6961:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6953:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e2afe0ce36414889a12a4f80007074ded6aba61b23cf3ead7274e914ffc0c83f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6831:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6846:4:4",
														"type": ""
													}
												],
												"src": "6680:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7133:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7150:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7153:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7143:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7143:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7143:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7247:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7250:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7240:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7240:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7240:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7271:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7274:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7264:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7264:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7264:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7105:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7334:190:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7344:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7371:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7353:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7353:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7344:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7467:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7469:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7469:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7469:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7392:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7399:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7389:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7389:77:4"
															},
															"nodeType": "YulIf",
															"src": "7386:103:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7498:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7509:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7516:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7505:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7505:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7498:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7320:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7330:3:4",
														"type": ""
													}
												],
												"src": "7291:233:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7684:288:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7694:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7706:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7717:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7702:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7702:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7694:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7774:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7787:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7798:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7783:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7783:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7730:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7730:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7730:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7855:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7868:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7879:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7864:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7864:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7811:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7811:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7811:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7937:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7950:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7961:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7946:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7946:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7893:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7893:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7893:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7640:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7652:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7660:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7668:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7679:4:4",
														"type": ""
													}
												],
												"src": "7530:442:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8084:71:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8106:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8114:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8102:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8102:14:4"
																	},
																	{
																		"hexValue": "4f6e6c792073656c6c65722063616e2072656d6f7665206c697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8118:29:4",
																		"type": "",
																		"value": "Only seller can remove list"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8095:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8095:53:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8095:53:4"
														}
													]
												},
												"name": "store_literal_in_memory_09dd53b62676719b8040611347978192842d176f40ffbc2b8a147e39c69a644c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8076:6:4",
														"type": ""
													}
												],
												"src": "7978:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8307:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8317:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8383:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8388:2:4",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8324:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8324:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8317:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8489:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_09dd53b62676719b8040611347978192842d176f40ffbc2b8a147e39c69a644c",
																	"nodeType": "YulIdentifier",
																	"src": "8400:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8400:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8400:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8502:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8513:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8518:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8509:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8509:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8502:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_09dd53b62676719b8040611347978192842d176f40ffbc2b8a147e39c69a644c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8295:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8303:3:4",
														"type": ""
													}
												],
												"src": "8161:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8704:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8714:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8726:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8737:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8722:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8722:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8714:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8761:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8772:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8757:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8757:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8780:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8786:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8776:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8776:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8750:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8750:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8750:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8806:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8940:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_09dd53b62676719b8040611347978192842d176f40ffbc2b8a147e39c69a644c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8814:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8814:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8806:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_09dd53b62676719b8040611347978192842d176f40ffbc2b8a147e39c69a644c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8684:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8699:4:4",
														"type": ""
													}
												],
												"src": "8533:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9084:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9094:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9106:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9117:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9102:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9102:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9094:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9174:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9187:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9198:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9183:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9183:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9130:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9130:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9130:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9255:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9268:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9279:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9264:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9264:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9211:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9211:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9211:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9048:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9060:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9068:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9079:4:4",
														"type": ""
													}
												],
												"src": "8958:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9402:63:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9424:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9432:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9420:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9420:14:4"
																	},
																	{
																		"hexValue": "4e4654206973206e6f7420666f722073616c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9436:21:4",
																		"type": "",
																		"value": "NFT is not for sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9413:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9413:45:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9413:45:4"
														}
													]
												},
												"name": "store_literal_in_memory_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9394:6:4",
														"type": ""
													}
												],
												"src": "9296:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9617:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9627:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9693:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9698:2:4",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9634:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9634:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9627:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9799:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738",
																	"nodeType": "YulIdentifier",
																	"src": "9710:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9710:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9710:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9812:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9823:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9828:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9819:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9819:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9812:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9605:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9613:3:4",
														"type": ""
													}
												],
												"src": "9471:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10014:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10024:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10036:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10047:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10032:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10032:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10024:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10071:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10082:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10067:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10067:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10090:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10096:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10086:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10086:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10060:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10060:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10060:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10116:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10250:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10124:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10124:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10116:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9994:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10009:4:4",
														"type": ""
													}
												],
												"src": "9843:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10374:68:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10396:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10404:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10392:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10392:14:4"
																	},
																	{
																		"hexValue": "496e636f7272656374207061796d656e7420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10408:26:4",
																		"type": "",
																		"value": "Incorrect payment amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10385:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10385:50:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10385:50:4"
														}
													]
												},
												"name": "store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10366:6:4",
														"type": ""
													}
												],
												"src": "10268:174:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10594:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10604:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10670:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10675:2:4",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10611:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10611:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10604:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10776:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d",
																	"nodeType": "YulIdentifier",
																	"src": "10687:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10687:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10687:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10789:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10800:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10805:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10796:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10796:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10789:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10582:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10590:3:4",
														"type": ""
													}
												],
												"src": "10448:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10991:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11001:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11013:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11024:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11009:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11009:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11001:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11048:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11059:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11044:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11044:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11067:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11073:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11063:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11063:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11037:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11037:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11037:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11093:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11227:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11101:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11101:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11093:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10971:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10986:4:4",
														"type": ""
													}
												],
												"src": "10820:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11399:288:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11409:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11421:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11432:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11417:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11417:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11409:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11489:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11502:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11513:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11498:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11498:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11445:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11445:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11445:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11570:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11583:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11594:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11579:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11579:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11526:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11526:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11526:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11652:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11665:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11676:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11661:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11661:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11608:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11608:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11608:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11355:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11367:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11375:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11383:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11394:4:4",
														"type": ""
													}
												],
												"src": "11245:442:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11738:149:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11748:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11771:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11753:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11753:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11748:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11782:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11805:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11787:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11787:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11782:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11816:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11828:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11831:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11824:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11824:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11816:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11858:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11860:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11860:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11860:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "11849:4:4"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11855:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11846:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11846:11:4"
															},
															"nodeType": "YulIf",
															"src": "11843:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11724:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11727:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11733:4:4",
														"type": ""
													}
												],
												"src": "11693:194:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11941:362:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11951:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11974:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11956:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11956:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11951:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11985:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12008:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11990:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11990:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11985:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12019:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12042:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12045:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12038:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12038:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "12023:11:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12056:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "12085:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12067:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12067:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12056:7:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12274:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12276:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12276:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12276:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12207:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12200:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12200:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "12230:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "12237:7:4"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "12246:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "12233:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12233:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "12227:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12227:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "12180:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12180:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12160:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12160:113:4"
															},
															"nodeType": "YulIf",
															"src": "12157:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11924:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11927:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11933:7:4",
														"type": ""
													}
												],
												"src": "11893:410:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12337:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12354:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12357:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12347:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12347:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12347:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12451:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12454:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12444:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12444:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12444:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12475:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12478:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12468:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12468:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12468:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "12309:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12537:143:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12547:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12570:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12552:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12552:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12547:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12581:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12604:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12586:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12586:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12581:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12628:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12630:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12630:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12630:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12625:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12618:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12618:9:4"
															},
															"nodeType": "YulIf",
															"src": "12615:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12660:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12669:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12672:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12665:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12665:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12660:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12526:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12529:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12535:1:4",
														"type": ""
													}
												],
												"src": "12495:185:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12868:371:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12878:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12890:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12901:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12886:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12886:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12878:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12959:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12972:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12983:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12968:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12968:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12915:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12915:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12915:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13040:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13053:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13064:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13049:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13049:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12996:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12996:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12996:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13122:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13135:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13146:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13131:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13131:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13078:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13078:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13078:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13204:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13217:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13228:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13213:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13213:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13160:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13160:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13160:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12816:9:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12828:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12836:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12844:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12852:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12863:4:4",
														"type": ""
													}
												],
												"src": "12686:553:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13351:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13373:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13381:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13369:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13369:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13385:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13362:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13362:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13362:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13441:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13449:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13437:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13437:15:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13454:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13430:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13430:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13430:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13343:6:4",
														"type": ""
													}
												],
												"src": "13245:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13622:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13632:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13698:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13703:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13639:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13639:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13632:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13804:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "13715:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13715:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13715:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13817:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13828:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13833:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13824:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13824:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13817:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13610:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13618:3:4",
														"type": ""
													}
												],
												"src": "13476:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14019:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14029:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14041:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14052:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14037:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14037:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14029:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14076:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14087:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14072:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14072:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14095:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14101:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14091:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14091:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14065:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14065:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14065:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14121:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14255:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14129:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14129:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14121:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13999:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14014:4:4",
														"type": ""
													}
												],
												"src": "13848:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14379:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14401:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14409:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14397:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14397:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14413:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14390:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14390:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14390:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14371:6:4",
														"type": ""
													}
												],
												"src": "14273:182:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14607:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14617:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14683:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14688:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14624:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14624:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14617:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14789:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "14700:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14700:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14700:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14802:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14813:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14818:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14809:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14809:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14802:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14595:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14603:3:4",
														"type": ""
													}
												],
												"src": "14461:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15004:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15014:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15026:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15037:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15022:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15022:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15014:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15061:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15072:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15057:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15057:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15080:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15086:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15076:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15076:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15050:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15050:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15050:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15106:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15240:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15114:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15114:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15106:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14984:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14999:4:4",
														"type": ""
													}
												],
												"src": "14833:419:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e78d8339bea1951bddddab05544b8ef190d674139511ac28e7e1f3d57ef72f6d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not  token owner!\")\n\n    }\n\n    function abi_encode_t_stringliteral_e78d8339bea1951bddddab05544b8ef190d674139511ac28e7e1f3d57ef72f6d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_e78d8339bea1951bddddab05544b8ef190d674139511ac28e7e1f3d57ef72f6d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e78d8339bea1951bddddab05544b8ef190d674139511ac28e7e1f3d57ef72f6d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e78d8339bea1951bddddab05544b8ef190d674139511ac28e7e1f3d57ef72f6d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e2afe0ce36414889a12a4f80007074ded6aba61b23cf3ead7274e914ffc0c83f(memPtr) {\n\n        mstore(add(memPtr, 0), \"This token is already on sale\")\n\n    }\n\n    function abi_encode_t_stringliteral_e2afe0ce36414889a12a4f80007074ded6aba61b23cf3ead7274e914ffc0c83f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_e2afe0ce36414889a12a4f80007074ded6aba61b23cf3ead7274e914ffc0c83f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e2afe0ce36414889a12a4f80007074ded6aba61b23cf3ead7274e914ffc0c83f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e2afe0ce36414889a12a4f80007074ded6aba61b23cf3ead7274e914ffc0c83f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_09dd53b62676719b8040611347978192842d176f40ffbc2b8a147e39c69a644c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only seller can remove list\")\n\n    }\n\n    function abi_encode_t_stringliteral_09dd53b62676719b8040611347978192842d176f40ffbc2b8a147e39c69a644c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_09dd53b62676719b8040611347978192842d176f40ffbc2b8a147e39c69a644c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_09dd53b62676719b8040611347978192842d176f40ffbc2b8a147e39c69a644c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_09dd53b62676719b8040611347978192842d176f40ffbc2b8a147e39c69a644c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT is not for sale\")\n\n    }\n\n    function abi_encode_t_stringliteral_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect payment amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x96032702 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x97492C46 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xB0D54BCF EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xC84C0387 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27E JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x26D8FDE2 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x44E797E9 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x51ED8288 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x60898801 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x16E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x2A7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA PUSH2 0x4EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x153 SWAP2 SWAP1 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x948 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x960 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x974 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x99D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0xD81 JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0xDC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0xA54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0xD81 JUMP JUMPDEST PUSH2 0xA5A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0xE41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x345 SWAP2 SWAP1 PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x362 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EA SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x449 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x440 SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x4AF JUMPI PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x48F SWAP1 PUSH2 0xFAA JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x2 SLOAD PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH32 0xA6A83F41A222E54496ABC9714714160FA0EA96150FFDB4AEBAF93E3054BAA942 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4E2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x4F6 PUSH2 0xADD JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x974 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x543 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x64F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x646 SWAP1 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH32 0xCDE58BC7BFF2645D4598B3EF8DA25103B048F9904835655D853E614095D7F2AB CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x697 SWAP3 SWAP2 SWAP1 PUSH2 0x1095 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x6F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EF SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 CALLVALUE EQ PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP2 SWAP1 PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F0 SWAP2 SWAP1 PUSH2 0xE76 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E DUP3 CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x851 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x86B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x87F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x64 PUSH1 0x1 SLOAD PUSH1 0x64 PUSH2 0x8AE SWAP2 SWAP1 PUSH2 0x11CD JUMP JUMPDEST CALLVALUE PUSH2 0x8B9 SWAP2 SWAP1 PUSH2 0x1201 JUMP JUMPDEST PUSH2 0x8C3 SWAP2 SWAP1 PUSH2 0x1272 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH32 0xE35677743C6B7ABF01CCA38CF0F4B986386E50105EC5FD3F42DAEEA57ACF57A9 DUP2 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x93B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x968 PUSH2 0xADD JUMP JUMPDEST PUSH2 0x972 PUSH1 0x0 PUSH2 0xB5B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9BF PUSH2 0xADD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA4A PUSH2 0xADD JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA62 PUSH2 0xADD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC8 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xADA DUP2 PUSH2 0xB5B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xAE5 PUSH2 0xC1F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB03 PUSH2 0x974 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP1 PUSH2 0x13C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3F DUP2 PUSH2 0xC2C JUMP JUMPDEST DUP2 EQ PUSH2 0xC4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC5C DUP2 PUSH2 0xC36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC79 JUMPI PUSH2 0xC78 PUSH2 0xC27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC87 DUP6 DUP3 DUP7 ADD PUSH2 0xC4D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC98 DUP6 DUP3 DUP7 ADD PUSH2 0xC4D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB8 JUMPI PUSH2 0xCB7 PUSH2 0xC27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCC6 DUP5 DUP3 DUP6 ADD PUSH2 0xC4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCD8 DUP2 PUSH2 0xC2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD24 DUP3 PUSH2 0xCF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD34 DUP2 PUSH2 0xD19 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD4F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD5E DUP2 PUSH2 0xD19 JUMP JUMPDEST DUP2 EQ PUSH2 0xD69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD7B DUP2 PUSH2 0xD55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD97 JUMPI PUSH2 0xD96 PUSH2 0xC27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDA5 DUP5 DUP3 DUP6 ADD PUSH2 0xD6C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC3 DUP2 PUSH2 0xDAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5072696365206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2B PUSH1 0x1F DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0xE36 DUP3 PUSH2 0xDF5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE5A DUP2 PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE70 DUP2 PUSH2 0xD55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE8C JUMPI PUSH2 0xE8B PUSH2 0xC27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE9A DUP5 DUP3 DUP6 ADD PUSH2 0xE61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F742020746F6B656E206F776E6572210000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED9 PUSH1 0x1B DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0xEE4 DUP3 PUSH2 0xEA3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF08 DUP2 PUSH2 0xECC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468697320746F6B656E20697320616C7265616479206F6E2073616C65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF45 PUSH1 0x1D DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0xF50 DUP3 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF74 DUP2 PUSH2 0xF38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFB5 DUP3 PUSH2 0xC2C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xFE7 JUMPI PUSH2 0xFE6 PUSH2 0xF7B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1007 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x1014 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCCF JUMP JUMPDEST PUSH2 0x1021 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCCF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792073656C6C65722063616E2072656D6F7665206C6973740000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105F PUSH1 0x1B DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x106A DUP3 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x108E DUP2 PUSH2 0x1052 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10AA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x10B7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCCF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E4654206973206E6F7420666F722073616C6500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F4 PUSH1 0x13 DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x10FF DUP3 PUSH2 0x10BE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1123 DUP2 PUSH2 0x10E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F7272656374207061796D656E7420616D6F756E740000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1160 PUSH1 0x18 DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x116B DUP3 PUSH2 0x112A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x118F DUP2 PUSH2 0x1153 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11AB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x11B8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x11C5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCCF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D8 DUP3 PUSH2 0xC2C JUMP JUMPDEST SWAP2 POP PUSH2 0x11E3 DUP4 PUSH2 0xC2C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x11FB JUMPI PUSH2 0x11FA PUSH2 0xF7B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120C DUP3 PUSH2 0xC2C JUMP JUMPDEST SWAP2 POP PUSH2 0x1217 DUP4 PUSH2 0xC2C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1225 DUP2 PUSH2 0xC2C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x123C JUMPI PUSH2 0x123B PUSH2 0xF7B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x127D DUP3 PUSH2 0xC2C JUMP JUMPDEST SWAP2 POP PUSH2 0x1288 DUP4 PUSH2 0xC2C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1298 JUMPI PUSH2 0x1297 PUSH2 0x1243 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x12B8 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x12C5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x12D2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xCCF JUMP JUMPDEST PUSH2 0x12DF PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xCCF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1344 PUSH1 0x26 DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x134F DUP3 PUSH2 0x12E8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1373 DUP2 PUSH2 0x1337 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B0 PUSH1 0x20 DUP4 PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP PUSH2 0x13BB DUP3 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13DF DUP2 PUSH2 0x13A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 DUP9 0xE0 EXP 0xA6 SLOAD 0xA5 MOD 0x4C 0xE5 GASPRICE 0xD9 0x49 ORIGIN 0xCB RETURNDATACOPY DUP5 0xDC 0xBC 0x49 0xC0 DUP6 CODESIZE CALLCODE 0xEF 0xB0 DUP1 0xE8 CREATE2 STATICCALL DUP9 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "458:2909:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1370:601;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3262:103;;;;;;;;;;;;;:::i;:::-;;2866:282;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1981:767;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;884:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;1201:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;839:39:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1121:212;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3154:102;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;804:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1370:601:3;1455:1;1446:6;:10;1438:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1524:6;;;;;;;;;;;:14;;;1539:8;1524:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1510:38;;:10;:38;;;1502:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;1616:1;1598:4;:14;1603:8;1598:14;;;;;;;;;;;;:19;1590:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1678:6;1661:4;:14;1666:8;1661:14;;;;;;;;;;;:23;;;;1824:1;1795:15;:25;1811:8;1795:25;;;;;;;;;;;;:30;1792:117;;1840:6;;:8;;;;;;;;;:::i;:::-;;;;;;1891:6;;1863:15;:25;1879:8;1863:25;;;;;;;;;;;:34;;;;1792:117;1923:37;1931:10;1943:8;1953:6;1923:37;;;;;;;;:::i;:::-;;;;;;;;1370:601;;:::o;3262:103::-;1094:13:0;:11;:13::i;:::-;3317:7:3::1;:5;:7::i;:::-;3309:25;;:48;3335:21;3309:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3262:103::o:0;2866:282::-;2943:6;;;;;;;;;;;:14;;;2958:8;2943:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2929:38;;:10;:38;;;2921:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3016:4;:14;3021:8;3016:14;;;;;;;;;;;3009:21;;;3109:32;3120:10;3132:8;3109:32;;;;;;;:::i;:::-;;;;;;;;2866:282;:::o;1981:767::-;2066:1;2048:4;:14;2053:8;2048:14;;;;;;;;;;;;:19;2040:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;2101:13;2117:4;:14;2122:8;2117:14;;;;;;;;;;;;2101:30;;2234:5;2221:9;:18;2213:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2278:14;2295:6;;;;;;;;;;;:14;;;2310:8;2295:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2278:41;;2330:6;;;;;;;;;;;:23;;;2354:6;2362:10;2374:8;2330:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2520:6;2512:24;;:62;2570:3;2556:10;;2550:3;:16;;;;:::i;:::-;2537:9;:30;;;;:::i;:::-;:36;;;;:::i;:::-;2512:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2659:4;:14;2664:8;2659:14;;;;;;;;;;;2652:21;;;2688:43;2695:6;2703:10;2715:8;2725:5;2688:43;;;;;;;;;:::i;:::-;;;;;;;;2030:718;;1981:767;:::o;884:50::-;;;;;;;;;;;;;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;839:39:3:-;;;;;;;;;;;;;;;;;:::o;1121:212::-;1194:4;1094:13:0;:11;:13::i;:::-;1246:3:3::1;1218:32;;:16;:32;;::::0;1210:41:::1;;;::::0;::::1;;1286:16;1261:6;;:42;;;;;;;;;;;;;;;;;;1320:4;1313:11;;1121:212:::0;;;:::o;3154:102::-;1094:13:0;:11;:13::i;:::-;3238:11:3::1;3225:10;:24;;;;3154:102:::0;:::o;804:25::-;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;88:117:4:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:329::-;1229:6;1278:2;1266:9;1257:7;1253:23;1249:32;1246:119;;;1284:79;;:::i;:::-;1246:119;1404:1;1429:53;1474:7;1465:6;1454:9;1450:22;1429:53;:::i;:::-;1419:63;;1375:117;1170:329;;;;:::o;1505:118::-;1592:24;1610:5;1592:24;:::i;:::-;1587:3;1580:37;1505:118;;:::o;1629:222::-;1722:4;1760:2;1749:9;1745:18;1737:26;;1773:71;1841:1;1830:9;1826:17;1817:6;1773:71;:::i;:::-;1629:222;;;;:::o;1857:126::-;1894:7;1934:42;1927:5;1923:54;1912:65;;1857:126;;;:::o;1989:96::-;2026:7;2055:24;2073:5;2055:24;:::i;:::-;2044:35;;1989:96;;;:::o;2091:118::-;2178:24;2196:5;2178:24;:::i;:::-;2173:3;2166:37;2091:118;;:::o;2215:222::-;2308:4;2346:2;2335:9;2331:18;2323:26;;2359:71;2427:1;2416:9;2412:17;2403:6;2359:71;:::i;:::-;2215:222;;;;:::o;2443:122::-;2516:24;2534:5;2516:24;:::i;:::-;2509:5;2506:35;2496:63;;2555:1;2552;2545:12;2496:63;2443:122;:::o;2571:139::-;2617:5;2655:6;2642:20;2633:29;;2671:33;2698:5;2671:33;:::i;:::-;2571:139;;;;:::o;2716:329::-;2775:6;2824:2;2812:9;2803:7;2799:23;2795:32;2792:119;;;2830:79;;:::i;:::-;2792:119;2950:1;2975:53;3020:7;3011:6;3000:9;2996:22;2975:53;:::i;:::-;2965:63;;2921:117;2716:329;;;;:::o;3051:90::-;3085:7;3128:5;3121:13;3114:21;3103:32;;3051:90;;;:::o;3147:109::-;3228:21;3243:5;3228:21;:::i;:::-;3223:3;3216:34;3147:109;;:::o;3262:210::-;3349:4;3387:2;3376:9;3372:18;3364:26;;3400:65;3462:1;3451:9;3447:17;3438:6;3400:65;:::i;:::-;3262:210;;;;:::o;3478:169::-;3562:11;3596:6;3591:3;3584:19;3636:4;3631:3;3627:14;3612:29;;3478:169;;;;:::o;3653:181::-;3793:33;3789:1;3781:6;3777:14;3770:57;3653:181;:::o;3840:366::-;3982:3;4003:67;4067:2;4062:3;4003:67;:::i;:::-;3996:74;;4079:93;4168:3;4079:93;:::i;:::-;4197:2;4192:3;4188:12;4181:19;;3840:366;;;:::o;4212:419::-;4378:4;4416:2;4405:9;4401:18;4393:26;;4465:9;4459:4;4455:20;4451:1;4440:9;4436:17;4429:47;4493:131;4619:4;4493:131;:::i;:::-;4485:139;;4212:419;;;:::o;4637:143::-;4694:5;4725:6;4719:13;4710:22;;4741:33;4768:5;4741:33;:::i;:::-;4637:143;;;;:::o;4786:351::-;4856:6;4905:2;4893:9;4884:7;4880:23;4876:32;4873:119;;;4911:79;;:::i;:::-;4873:119;5031:1;5056:64;5112:7;5103:6;5092:9;5088:22;5056:64;:::i;:::-;5046:74;;5002:128;4786:351;;;;:::o;5143:177::-;5283:29;5279:1;5271:6;5267:14;5260:53;5143:177;:::o;5326:366::-;5468:3;5489:67;5553:2;5548:3;5489:67;:::i;:::-;5482:74;;5565:93;5654:3;5565:93;:::i;:::-;5683:2;5678:3;5674:12;5667:19;;5326:366;;;:::o;5698:419::-;5864:4;5902:2;5891:9;5887:18;5879:26;;5951:9;5945:4;5941:20;5937:1;5926:9;5922:17;5915:47;5979:131;6105:4;5979:131;:::i;:::-;5971:139;;5698:419;;;:::o;6123:179::-;6263:31;6259:1;6251:6;6247:14;6240:55;6123:179;:::o;6308:366::-;6450:3;6471:67;6535:2;6530:3;6471:67;:::i;:::-;6464:74;;6547:93;6636:3;6547:93;:::i;:::-;6665:2;6660:3;6656:12;6649:19;;6308:366;;;:::o;6680:419::-;6846:4;6884:2;6873:9;6869:18;6861:26;;6933:9;6927:4;6923:20;6919:1;6908:9;6904:17;6897:47;6961:131;7087:4;6961:131;:::i;:::-;6953:139;;6680:419;;;:::o;7105:180::-;7153:77;7150:1;7143:88;7250:4;7247:1;7240:15;7274:4;7271:1;7264:15;7291:233;7330:3;7353:24;7371:5;7353:24;:::i;:::-;7344:33;;7399:66;7392:5;7389:77;7386:103;;7469:18;;:::i;:::-;7386:103;7516:1;7509:5;7505:13;7498:20;;7291:233;;;:::o;7530:442::-;7679:4;7717:2;7706:9;7702:18;7694:26;;7730:71;7798:1;7787:9;7783:17;7774:6;7730:71;:::i;:::-;7811:72;7879:2;7868:9;7864:18;7855:6;7811:72;:::i;:::-;7893;7961:2;7950:9;7946:18;7937:6;7893:72;:::i;:::-;7530:442;;;;;;:::o;7978:177::-;8118:29;8114:1;8106:6;8102:14;8095:53;7978:177;:::o;8161:366::-;8303:3;8324:67;8388:2;8383:3;8324:67;:::i;:::-;8317:74;;8400:93;8489:3;8400:93;:::i;:::-;8518:2;8513:3;8509:12;8502:19;;8161:366;;;:::o;8533:419::-;8699:4;8737:2;8726:9;8722:18;8714:26;;8786:9;8780:4;8776:20;8772:1;8761:9;8757:17;8750:47;8814:131;8940:4;8814:131;:::i;:::-;8806:139;;8533:419;;;:::o;8958:332::-;9079:4;9117:2;9106:9;9102:18;9094:26;;9130:71;9198:1;9187:9;9183:17;9174:6;9130:71;:::i;:::-;9211:72;9279:2;9268:9;9264:18;9255:6;9211:72;:::i;:::-;8958:332;;;;;:::o;9296:169::-;9436:21;9432:1;9424:6;9420:14;9413:45;9296:169;:::o;9471:366::-;9613:3;9634:67;9698:2;9693:3;9634:67;:::i;:::-;9627:74;;9710:93;9799:3;9710:93;:::i;:::-;9828:2;9823:3;9819:12;9812:19;;9471:366;;;:::o;9843:419::-;10009:4;10047:2;10036:9;10032:18;10024:26;;10096:9;10090:4;10086:20;10082:1;10071:9;10067:17;10060:47;10124:131;10250:4;10124:131;:::i;:::-;10116:139;;9843:419;;;:::o;10268:174::-;10408:26;10404:1;10396:6;10392:14;10385:50;10268:174;:::o;10448:366::-;10590:3;10611:67;10675:2;10670:3;10611:67;:::i;:::-;10604:74;;10687:93;10776:3;10687:93;:::i;:::-;10805:2;10800:3;10796:12;10789:19;;10448:366;;;:::o;10820:419::-;10986:4;11024:2;11013:9;11009:18;11001:26;;11073:9;11067:4;11063:20;11059:1;11048:9;11044:17;11037:47;11101:131;11227:4;11101:131;:::i;:::-;11093:139;;10820:419;;;:::o;11245:442::-;11394:4;11432:2;11421:9;11417:18;11409:26;;11445:71;11513:1;11502:9;11498:17;11489:6;11445:71;:::i;:::-;11526:72;11594:2;11583:9;11579:18;11570:6;11526:72;:::i;:::-;11608;11676:2;11665:9;11661:18;11652:6;11608:72;:::i;:::-;11245:442;;;;;;:::o;11693:194::-;11733:4;11753:20;11771:1;11753:20;:::i;:::-;11748:25;;11787:20;11805:1;11787:20;:::i;:::-;11782:25;;11831:1;11828;11824:9;11816:17;;11855:1;11849:4;11846:11;11843:37;;;11860:18;;:::i;:::-;11843:37;11693:194;;;;:::o;11893:410::-;11933:7;11956:20;11974:1;11956:20;:::i;:::-;11951:25;;11990:20;12008:1;11990:20;:::i;:::-;11985:25;;12045:1;12042;12038:9;12067:30;12085:11;12067:30;:::i;:::-;12056:41;;12246:1;12237:7;12233:15;12230:1;12227:22;12207:1;12200:9;12180:83;12157:139;;12276:18;;:::i;:::-;12157:139;11941:362;11893:410;;;;:::o;12309:180::-;12357:77;12354:1;12347:88;12454:4;12451:1;12444:15;12478:4;12475:1;12468:15;12495:185;12535:1;12552:20;12570:1;12552:20;:::i;:::-;12547:25;;12586:20;12604:1;12586:20;:::i;:::-;12581:25;;12625:1;12615:35;;12630:18;;:::i;:::-;12615:35;12672:1;12669;12665:9;12660:14;;12495:185;;;;:::o;12686:553::-;12863:4;12901:3;12890:9;12886:19;12878:27;;12915:71;12983:1;12972:9;12968:17;12959:6;12915:71;:::i;:::-;12996:72;13064:2;13053:9;13049:18;13040:6;12996:72;:::i;:::-;13078;13146:2;13135:9;13131:18;13122:6;13078:72;:::i;:::-;13160;13228:2;13217:9;13213:18;13204:6;13160:72;:::i;:::-;12686:553;;;;;;;:::o;13245:225::-;13385:34;13381:1;13373:6;13369:14;13362:58;13454:8;13449:2;13441:6;13437:15;13430:33;13245:225;:::o;13476:366::-;13618:3;13639:67;13703:2;13698:3;13639:67;:::i;:::-;13632:74;;13715:93;13804:3;13715:93;:::i;:::-;13833:2;13828:3;13824:12;13817:19;;13476:366;;;:::o;13848:419::-;14014:4;14052:2;14041:9;14037:18;14029:26;;14101:9;14095:4;14091:20;14087:1;14076:9;14072:17;14065:47;14129:131;14255:4;14129:131;:::i;:::-;14121:139;;13848:419;;;:::o;14273:182::-;14413:34;14409:1;14401:6;14397:14;14390:58;14273:182;:::o;14461:366::-;14603:3;14624:67;14688:2;14683:3;14624:67;:::i;:::-;14617:74;;14700:93;14789:3;14700:93;:::i;:::-;14818:2;14813:3;14809:12;14802:19;;14461:366;;;:::o;14833:419::-;14999:4;15037:2;15026:9;15022:18;15014:26;;15086:9;15080:4;15076:20;15072:1;15061:9;15057:17;15050:47;15114:131;15240:4;15114:131;:::i;:::-;15106:139;;14833:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1029600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyNFT(uint256)": "infinite",
								"owner()": "2522",
								"removeSale(uint256)": "infinite",
								"renounceOwnership()": "30509",
								"sale(uint256)": "infinite",
								"saleId()": "2517",
								"saleIdToTokenId(uint256)": "infinite",
								"saleNFT(uint256,uint256)": "infinite",
								"setInterface(address)": "27267",
								"setTradingFee(uint256)": "24850",
								"transferOwnership(address)": "30854",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 458,
									"end": 3367,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 797,
									"end": 798,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 776,
									"end": 798,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 776,
									"end": 798,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 828,
									"end": 829,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 804,
									"end": 829,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 804,
									"end": 829,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 458,
									"end": 3367,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208688e00aa654a5064ce53ad94932cb3e84dcbc49c08538f2efb080e8f5fa88d764736f6c63430008120033",
									".code": [
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "96032702"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "97492C46"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "B0D54BCF"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "C84C0387"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "26D8FDE2"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "3CCFD60B"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "44E797E9"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "51ED8288"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "60898801"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 458,
											"end": 3367,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1370,
											"end": 1971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1370,
											"end": 1971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3365,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3262,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3365,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3365,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3262,
											"end": 3365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3365,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3262,
											"end": 3365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3365,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3365,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3262,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3365,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3262,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3262,
											"end": 3365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3365,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3262,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3365,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2866,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2866,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1981,
											"end": 2748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1981,
											"end": 2748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 884,
											"end": 934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 884,
											"end": 934,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 884,
											"end": 934,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 884,
											"end": 934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 884,
											"end": 934,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 884,
											"end": 934,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 884,
											"end": 934,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 884,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 884,
											"end": 934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 884,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 884,
											"end": 934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 884,
											"end": 934,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 884,
											"end": 934,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 884,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 884,
											"end": 934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 884,
											"end": 934,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 839,
											"end": 878,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 839,
											"end": 878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 839,
											"end": 878,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 878,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 839,
											"end": 878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 839,
											"end": 878,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 878,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 839,
											"end": 878,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 839,
											"end": 878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 839,
											"end": 878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 839,
											"end": 878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 839,
											"end": 878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 878,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 839,
											"end": 878,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 839,
											"end": 878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 839,
											"end": 878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 878,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1121,
											"end": 1333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1121,
											"end": 1333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1121,
											"end": 1333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3154,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3154,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 804,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 804,
											"end": 829,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 804,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 804,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 804,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 804,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 804,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 804,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 804,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 829,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1456,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1452,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1446,
											"end": 1456,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1438,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1438,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1530,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1524,
											"end": 1530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1530,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1530,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1530,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1530,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1524,
											"end": 1530,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1530,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1530,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1530,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1524,
											"end": 1530,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1538,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1524,
											"end": 1538,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1538,
											"name": "PUSH",
											"source": 3,
											"value": "6352211E"
										},
										{
											"begin": 1539,
											"end": 1547,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1524,
											"end": 1548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1524,
											"end": 1548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1510,
											"end": 1520,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1502,
											"end": 1580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1502,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1616,
											"end": 1617,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1602,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1598,
											"end": 1612,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1603,
											"end": 1611,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1612,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1612,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1612,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1612,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1612,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1612,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1612,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1617,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1590,
											"end": 1651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1590,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1684,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1665,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1661,
											"end": 1675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1674,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1684,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1825,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1810,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1819,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1825,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1792,
											"end": 1909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1846,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1840,
											"end": 1846,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1848,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1848,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1848,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1848,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1848,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1840,
											"end": 1848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1840,
											"end": 1848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1848,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1840,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1848,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1848,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1848,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1848,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1897,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1891,
											"end": 1897,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1878,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1863,
											"end": 1888,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1887,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1888,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1888,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1888,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1863,
											"end": 1888,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1888,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1888,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1888,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1888,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1863,
											"end": 1888,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1888,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1888,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1897,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1897,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1909,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1792,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "PUSH",
											"source": 3,
											"value": "A6A83F41A222E54496ABC9714714160FA0EA96150FFDB4AEBAF93E3054BAA942"
										},
										{
											"begin": 1931,
											"end": 1941,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 1959,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1923,
											"end": 1960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1960,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3365,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3262,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3317,
											"end": 3324,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3317,
											"end": 3322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3317,
											"end": 3324,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3317,
											"end": 3324,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3317,
											"end": 3324,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3309,
											"end": 3334,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 3335,
											"end": 3356,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3357,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3357,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2949,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2943,
											"end": 2949,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2943,
											"end": 2949,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2949,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2949,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2949,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2943,
											"end": 2949,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2949,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2949,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2949,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2943,
											"end": 2949,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2943,
											"end": 2957,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "6352211E"
										},
										{
											"begin": 2958,
											"end": 2966,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2943,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2943,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2943,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2929,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2929,
											"end": 2967,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2929,
											"end": 2939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2929,
											"end": 2967,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2929,
											"end": 2967,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2929,
											"end": 2967,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2921,
											"end": 2999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3020,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3016,
											"end": 3030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3029,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3030,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3030,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3030,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3016,
											"end": 3030,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3030,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3030,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3030,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3030,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3016,
											"end": 3030,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3016,
											"end": 3030,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3009,
											"end": 3030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3009,
											"end": 3030,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3009,
											"end": 3030,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3109,
											"end": 3141,
											"name": "PUSH",
											"source": 3,
											"value": "CDE58BC7BFF2645D4598B3EF8DA25103B048F9904835655D853E614095D7F2AB"
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3140,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3109,
											"end": 3141,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3109,
											"end": 3141,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3109,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3109,
											"end": 3141,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3109,
											"end": 3141,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3109,
											"end": 3141,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3109,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3109,
											"end": 3141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3109,
											"end": 3141,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3109,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3109,
											"end": 3141,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3109,
											"end": 3141,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3109,
											"end": 3141,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3109,
											"end": 3141,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3109,
											"end": 3141,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3109,
											"end": 3141,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3109,
											"end": 3141,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 3148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2066,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2052,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2048,
											"end": 2062,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2061,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2062,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2062,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2062,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2048,
											"end": 2062,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2062,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2062,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2062,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2062,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2048,
											"end": 2062,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2062,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2062,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2062,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2067,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2040,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2040,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2117,
											"end": 2131,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2130,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2131,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2131,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2131,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2117,
											"end": 2131,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2131,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2131,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2131,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2117,
											"end": 2131,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2131,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2131,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2117,
											"end": 2131,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2131,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2234,
											"end": 2239,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2221,
											"end": 2230,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2221,
											"end": 2239,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2213,
											"end": 2268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2292,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "PUSH",
											"source": 3,
											"value": "6352211E"
										},
										{
											"begin": 2310,
											"end": 2318,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2295,
											"end": 2319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2295,
											"end": 2319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2295,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2319,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2330,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2336,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2336,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2336,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2330,
											"end": 2336,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2336,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2336,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2330,
											"end": 2336,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2353,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2330,
											"end": 2353,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2353,
											"name": "PUSH",
											"source": 3,
											"value": "42842E0E"
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2362,
											"end": 2372,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2374,
											"end": 2382,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2330,
											"end": 2383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2520,
											"end": 2526,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2536,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2512,
											"end": 2536,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 2570,
											"end": 2573,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2556,
											"end": 2566,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2556,
											"end": 2566,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 2553,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2550,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2550,
											"end": 2566,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 2566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2550,
											"end": 2566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 2566,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2550,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2546,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2537,
											"end": 2567,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2537,
											"end": 2567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2567,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2537,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2537,
											"end": 2573,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2573,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2537,
											"end": 2573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2573,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2537,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2574,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2663,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2659,
											"end": 2673,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2672,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2673,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2673,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2673,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2659,
											"end": 2673,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2673,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2673,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2673,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2673,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2659,
											"end": 2673,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2673,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2659,
											"end": 2673,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2673,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2673,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2673,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2731,
											"name": "PUSH",
											"source": 3,
											"value": "E35677743C6B7ABF01CCA38CF0F4B986386E50105EC5FD3F42DAEEA57ACF57A9"
										},
										{
											"begin": 2695,
											"end": 2701,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2713,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2715,
											"end": 2723,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2725,
											"end": 2730,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2731,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2731,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2688,
											"end": 2731,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2731,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2731,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2731,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2731,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2688,
											"end": 2731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2731,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2688,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2731,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2731,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2731,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2731,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2731,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2731,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2731,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2030,
											"end": 2748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2030,
											"end": 2748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 884,
											"end": 934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 884,
											"end": 934,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 884,
											"end": 934,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 884,
											"end": 934,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 884,
											"end": 934,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 884,
											"end": 934,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 884,
											"end": 934,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 884,
											"end": 934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 839,
											"end": 878,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 839,
											"end": 878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 839,
											"end": 878,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 839,
											"end": 878,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 878,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 878,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 878,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 878,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 839,
											"end": 878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1218,
											"end": 1250,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1234,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1218,
											"end": 1250,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1250,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1251,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1210,
											"end": 1251,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1251,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1251,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1210,
											"end": 1251,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1286,
											"end": 1302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1261,
											"end": 1267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1261,
											"end": 1267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1261,
											"end": 1303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1261,
											"end": 1303,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1261,
											"end": 1303,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1261,
											"end": 1303,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1261,
											"end": 1303,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1261,
											"end": 1303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1261,
											"end": 1303,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1261,
											"end": 1303,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1261,
											"end": 1303,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1261,
											"end": 1303,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1261,
											"end": 1303,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1261,
											"end": 1303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1261,
											"end": 1303,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1261,
											"end": 1303,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1261,
											"end": 1303,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1261,
											"end": 1303,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1261,
											"end": 1303,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1261,
											"end": 1303,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1320,
											"end": 1324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1313,
											"end": 1324,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1313,
											"end": 1324,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3238,
											"end": 3249,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3225,
											"end": 3249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3249,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3249,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3249,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 804,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 804,
											"end": 829,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 804,
											"end": 829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 758,
											"end": 764,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 786,
											"end": 818,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 783,
											"end": 902,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 783,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 821,
											"end": 900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 821,
											"end": 900,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 783,
											"end": 902,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 941,
											"end": 942,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 966,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 912,
											"end": 1029,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1094,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1039,
											"end": 1157,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1499,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1170,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1235,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1278,
											"end": 1280,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1275,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1257,
											"end": 1264,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1253,
											"end": 1276,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1249,
											"end": 1281,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1365,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 1246,
											"end": 1365,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 1284,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1284,
											"end": 1363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1363,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 1284,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1365,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 1246,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1405,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 1474,
											"end": 1481,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1471,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1463,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1429,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1482,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 1429,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1419,
											"end": 1482,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1419,
											"end": 1482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1492,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1499,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1499,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1499,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1499,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1623,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1505,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1592,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1616,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 1592,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1590,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1580,
											"end": 1617,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1623,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1623,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1629,
											"end": 1851,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1629,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1722,
											"end": 1726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1762,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1763,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1773,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 1841,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1839,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1826,
											"end": 1843,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1773,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1773,
											"end": 1844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1773,
											"end": 1844,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 1773,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1629,
											"end": 1851,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1629,
											"end": 1851,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1629,
											"end": 1851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1629,
											"end": 1851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1629,
											"end": 1851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1927,
											"end": 1932,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1977,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 1977,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 1977,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1989,
											"end": 2085,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1989,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2026,
											"end": 2033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 2073,
											"end": 2078,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2055,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2079,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2079,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1989,
											"end": 2085,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1989,
											"end": 2085,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1989,
											"end": 2085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1989,
											"end": 2085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2091,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2196,
											"end": 2201,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2178,
											"end": 2202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2202,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2178,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2176,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2203,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2437,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2215,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2312,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2348,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2335,
											"end": 2344,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2349,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2349,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2349,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2427,
											"end": 2428,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2412,
											"end": 2429,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2409,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2359,
											"end": 2430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2430,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2359,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2437,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2437,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2565,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2443,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 2534,
											"end": 2539,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2516,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2514,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2506,
											"end": 2541,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2555,
											"end": 2556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2557,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2617,
											"end": 2622,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2642,
											"end": 2662,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2633,
											"end": 2662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2633,
											"end": 2662,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2698,
											"end": 2703,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2671,
											"end": 2704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2775,
											"end": 2781,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2826,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2812,
											"end": 2821,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2810,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2822,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2795,
											"end": 2827,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2830,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 2951,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 3020,
											"end": 3027,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3011,
											"end": 3017,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2996,
											"end": 3018,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2975,
											"end": 3028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3028,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3028,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 3038,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 3045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3085,
											"end": 3092,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3128,
											"end": 3133,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3134,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3135,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3103,
											"end": 3135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3103,
											"end": 3135,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3256,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3147,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3228,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 3243,
											"end": 3248,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3228,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 3228,
											"end": 3249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3228,
											"end": 3249,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 3228,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3226,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3256,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3256,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3353,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3389,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3376,
											"end": 3385,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3460,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3447,
											"end": 3464,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3444,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3400,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3465,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 3400,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3478,
											"end": 3647,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 3478,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3562,
											"end": 3573,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3602,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3594,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3584,
											"end": 3603,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3640,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3631,
											"end": 3634,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3627,
											"end": 3641,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3612,
											"end": 3641,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3612,
											"end": 3641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3478,
											"end": 3647,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3478,
											"end": 3647,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3478,
											"end": 3647,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3478,
											"end": 3647,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3478,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3834,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 3653,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3826,
											"name": "PUSH",
											"source": 4,
											"value": "5072696365206D7573742062652067726561746572207468616E207A65726F00"
										},
										{
											"begin": 3789,
											"end": 3790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3781,
											"end": 3787,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3791,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3827,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 4206,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3840,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 3985,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 4067,
											"end": 4069,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4062,
											"end": 4065,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4003,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4003,
											"end": 4070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4003,
											"end": 4070,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 4003,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3996,
											"end": 4070,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3996,
											"end": 4070,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4079,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 4168,
											"end": 4171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4079,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4079,
											"end": 4172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4079,
											"end": 4172,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 4079,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4197,
											"end": 4199,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4195,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4200,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4181,
											"end": 4200,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4181,
											"end": 4200,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 4206,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 4206,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 4206,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 4206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4212,
											"end": 4631,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4212,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4416,
											"end": 4418,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4405,
											"end": 4414,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4419,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4393,
											"end": 4419,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4393,
											"end": 4419,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4465,
											"end": 4474,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4459,
											"end": 4463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4455,
											"end": 4475,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4451,
											"end": 4452,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4440,
											"end": 4449,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4453,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4476,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4493,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4493,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 4493,
											"end": 4624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4493,
											"end": 4624,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 4493,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4485,
											"end": 4624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4485,
											"end": 4624,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4212,
											"end": 4631,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4212,
											"end": 4631,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4212,
											"end": 4631,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4212,
											"end": 4631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 4780,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 4637,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4699,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4731,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4719,
											"end": 4732,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4732,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 4732,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 4768,
											"end": 4773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4741,
											"end": 4774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4774,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 4741,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 4780,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 4780,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 4780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 4780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4786,
											"end": 5137,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4786,
											"end": 5137,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4856,
											"end": 4862,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4905,
											"end": 4907,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4893,
											"end": 4902,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4884,
											"end": 4891,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4880,
											"end": 4903,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4876,
											"end": 4908,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4992,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 4873,
											"end": 4992,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4911,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 4911,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4911,
											"end": 4990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4911,
											"end": 4990,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 4911,
											"end": 4990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4992,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 4873,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5031,
											"end": 5032,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5056,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 5112,
											"end": 5119,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5103,
											"end": 5109,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5092,
											"end": 5101,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5110,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5056,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5056,
											"end": 5120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5056,
											"end": 5120,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 5056,
											"end": 5120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5130,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4786,
											"end": 5137,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4786,
											"end": 5137,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4786,
											"end": 5137,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4786,
											"end": 5137,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4786,
											"end": 5137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5320,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 5143,
											"end": 5320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5283,
											"end": 5312,
											"name": "PUSH",
											"source": 4,
											"value": "43616C6C6572206973206E6F742020746F6B656E206F776E6572210000000000"
										},
										{
											"begin": 5279,
											"end": 5280,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5271,
											"end": 5277,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5267,
											"end": 5281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5260,
											"end": 5313,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5320,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5326,
											"end": 5692,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5326,
											"end": 5692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5468,
											"end": 5471,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5489,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 5553,
											"end": 5555,
											"name": "PUSH",
											"source": 4,
											"value": "1B"
										},
										{
											"begin": 5548,
											"end": 5551,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5489,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 5489,
											"end": 5556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5489,
											"end": 5556,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 5489,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5482,
											"end": 5556,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5482,
											"end": 5556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5565,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 5654,
											"end": 5657,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5565,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 5565,
											"end": 5658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5565,
											"end": 5658,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 5565,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5683,
											"end": 5685,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5678,
											"end": 5681,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5674,
											"end": 5686,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5326,
											"end": 5692,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5326,
											"end": 5692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5326,
											"end": 5692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5326,
											"end": 5692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5698,
											"end": 6117,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5698,
											"end": 6117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5864,
											"end": 5868,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5902,
											"end": 5904,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5891,
											"end": 5900,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5887,
											"end": 5905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5879,
											"end": 5905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5879,
											"end": 5905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5951,
											"end": 5960,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5945,
											"end": 5949,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5941,
											"end": 5961,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 5938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5926,
											"end": 5935,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5922,
											"end": 5939,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5915,
											"end": 5962,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5979,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 6105,
											"end": 6109,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5979,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5979,
											"end": 6110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5979,
											"end": 6110,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 5979,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 6110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 6110,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5698,
											"end": 6117,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5698,
											"end": 6117,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5698,
											"end": 6117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5698,
											"end": 6117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6123,
											"end": 6302,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 6123,
											"end": 6302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6263,
											"end": 6294,
											"name": "PUSH",
											"source": 4,
											"value": "5468697320746F6B656E20697320616C7265616479206F6E2073616C65000000"
										},
										{
											"begin": 6259,
											"end": 6260,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6251,
											"end": 6257,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6247,
											"end": 6261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6295,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6123,
											"end": 6302,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6123,
											"end": 6302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6308,
											"end": 6674,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 6308,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6450,
											"end": 6453,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6471,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 6535,
											"end": 6537,
											"name": "PUSH",
											"source": 4,
											"value": "1D"
										},
										{
											"begin": 6530,
											"end": 6533,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6471,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 6471,
											"end": 6538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6471,
											"end": 6538,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 6471,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6464,
											"end": 6538,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6464,
											"end": 6538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 6636,
											"end": 6639,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 6547,
											"end": 6640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6640,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 6547,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6665,
											"end": 6667,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6660,
											"end": 6663,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6656,
											"end": 6668,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6668,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6308,
											"end": 6674,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6308,
											"end": 6674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6308,
											"end": 6674,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6308,
											"end": 6674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6680,
											"end": 7099,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 6680,
											"end": 7099,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6846,
											"end": 6850,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6884,
											"end": 6886,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6873,
											"end": 6882,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6861,
											"end": 6887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6861,
											"end": 6887,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 6942,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6927,
											"end": 6931,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6923,
											"end": 6943,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6919,
											"end": 6920,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6908,
											"end": 6917,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6904,
											"end": 6921,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6897,
											"end": 6944,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6961,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 7087,
											"end": 7091,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6961,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 6961,
											"end": 7092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6961,
											"end": 7092,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 6961,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6953,
											"end": 7092,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6953,
											"end": 7092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6680,
											"end": 7099,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6680,
											"end": 7099,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6680,
											"end": 7099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6680,
											"end": 7099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7105,
											"end": 7285,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7105,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7153,
											"end": 7230,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7150,
											"end": 7151,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7143,
											"end": 7231,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7250,
											"end": 7254,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 7247,
											"end": 7248,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7240,
											"end": 7255,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7274,
											"end": 7278,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7271,
											"end": 7272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7264,
											"end": 7279,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7524,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 7291,
											"end": 7524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7330,
											"end": 7333,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7353,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 7371,
											"end": 7376,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7353,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 7353,
											"end": 7377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7353,
											"end": 7377,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 7353,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7344,
											"end": 7377,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7344,
											"end": 7377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7465,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7392,
											"end": 7397,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7389,
											"end": 7466,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7386,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 7386,
											"end": 7489,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 7469,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7469,
											"end": 7487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 7487,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 7469,
											"end": 7487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7386,
											"end": 7489,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 7386,
											"end": 7489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7516,
											"end": 7517,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7509,
											"end": 7514,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7505,
											"end": 7518,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7518,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7530,
											"end": 7972,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 7530,
											"end": 7972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7719,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7706,
											"end": 7715,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7720,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7694,
											"end": 7720,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7694,
											"end": 7720,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7730,
											"end": 7801,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 7798,
											"end": 7799,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7787,
											"end": 7796,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7783,
											"end": 7800,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7774,
											"end": 7780,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7730,
											"end": 7801,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 7730,
											"end": 7801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7730,
											"end": 7801,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 7730,
											"end": 7801,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7811,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 7879,
											"end": 7881,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7868,
											"end": 7877,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7864,
											"end": 7882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7855,
											"end": 7861,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7811,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 7811,
											"end": 7883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7811,
											"end": 7883,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 7811,
											"end": 7883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 7961,
											"end": 7963,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7950,
											"end": 7959,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7964,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 7893,
											"end": 7965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7965,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 7893,
											"end": 7965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7530,
											"end": 7972,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7530,
											"end": 7972,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7530,
											"end": 7972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7530,
											"end": 7972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7530,
											"end": 7972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7530,
											"end": 7972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7530,
											"end": 7972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7978,
											"end": 8155,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 7978,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8118,
											"end": 8147,
											"name": "PUSH",
											"source": 4,
											"value": "4F6E6C792073656C6C65722063616E2072656D6F7665206C6973740000000000"
										},
										{
											"begin": 8114,
											"end": 8115,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8106,
											"end": 8112,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8102,
											"end": 8116,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8148,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7978,
											"end": 8155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7978,
											"end": 8155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8527,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 8161,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8303,
											"end": 8306,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8324,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 8388,
											"end": 8390,
											"name": "PUSH",
											"source": 4,
											"value": "1B"
										},
										{
											"begin": 8383,
											"end": 8386,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8324,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 8324,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8324,
											"end": 8391,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 8324,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8391,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8400,
											"end": 8493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 8489,
											"end": 8492,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8400,
											"end": 8493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 8400,
											"end": 8493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8400,
											"end": 8493,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 8400,
											"end": 8493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8518,
											"end": 8520,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8513,
											"end": 8516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8509,
											"end": 8521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8502,
											"end": 8521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8502,
											"end": 8521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8527,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8527,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8527,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8533,
											"end": 8952,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 8533,
											"end": 8952,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8699,
											"end": 8703,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8737,
											"end": 8739,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8726,
											"end": 8735,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8740,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8714,
											"end": 8740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8714,
											"end": 8740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8786,
											"end": 8795,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8780,
											"end": 8784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8776,
											"end": 8796,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8772,
											"end": 8773,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8761,
											"end": 8770,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8757,
											"end": 8774,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8750,
											"end": 8797,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8814,
											"end": 8945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 8940,
											"end": 8944,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8814,
											"end": 8945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 8814,
											"end": 8945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8814,
											"end": 8945,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 8814,
											"end": 8945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8806,
											"end": 8945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8806,
											"end": 8945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8533,
											"end": 8952,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8533,
											"end": 8952,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8533,
											"end": 8952,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8533,
											"end": 8952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 9290,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 8958,
											"end": 9290,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9079,
											"end": 9083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9117,
											"end": 9119,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9106,
											"end": 9115,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9102,
											"end": 9120,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9094,
											"end": 9120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9094,
											"end": 9120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9130,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 9198,
											"end": 9199,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9187,
											"end": 9196,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9183,
											"end": 9200,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9174,
											"end": 9180,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9130,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 9130,
											"end": 9201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9130,
											"end": 9201,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 9130,
											"end": 9201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9211,
											"end": 9283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 9279,
											"end": 9281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9268,
											"end": 9277,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9264,
											"end": 9282,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9255,
											"end": 9261,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9211,
											"end": 9283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 9211,
											"end": 9283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9211,
											"end": 9283,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 9211,
											"end": 9283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 9290,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 9290,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 9290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 9290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 9290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 9290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9296,
											"end": 9465,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 9296,
											"end": 9465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9436,
											"end": 9457,
											"name": "PUSH",
											"source": 4,
											"value": "4E4654206973206E6F7420666F722073616C6500000000000000000000000000"
										},
										{
											"begin": 9432,
											"end": 9433,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9424,
											"end": 9430,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9420,
											"end": 9434,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9458,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9296,
											"end": 9465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9296,
											"end": 9465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9471,
											"end": 9837,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 9471,
											"end": 9837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9613,
											"end": 9616,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9634,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 9698,
											"end": 9700,
											"name": "PUSH",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 9693,
											"end": 9696,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9634,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 9634,
											"end": 9701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9634,
											"end": 9701,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 9634,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9627,
											"end": 9701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9627,
											"end": 9701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9710,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 9799,
											"end": 9802,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9710,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 9710,
											"end": 9803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9710,
											"end": 9803,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 9710,
											"end": 9803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9828,
											"end": 9830,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9823,
											"end": 9826,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9819,
											"end": 9831,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9471,
											"end": 9837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9471,
											"end": 9837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9471,
											"end": 9837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9471,
											"end": 9837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 10262,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 9843,
											"end": 10262,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10047,
											"end": 10049,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10032,
											"end": 10050,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10024,
											"end": 10050,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10024,
											"end": 10050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10096,
											"end": 10105,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10090,
											"end": 10094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10082,
											"end": 10083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10071,
											"end": 10080,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10067,
											"end": 10084,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10107,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10124,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 10250,
											"end": 10254,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10124,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 10124,
											"end": 10255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10124,
											"end": 10255,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 10124,
											"end": 10255,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10116,
											"end": 10255,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10116,
											"end": 10255,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 10262,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 10262,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 10262,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 10262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10268,
											"end": 10442,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 10268,
											"end": 10442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10408,
											"end": 10434,
											"name": "PUSH",
											"source": 4,
											"value": "496E636F7272656374207061796D656E7420616D6F756E740000000000000000"
										},
										{
											"begin": 10404,
											"end": 10405,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10396,
											"end": 10402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10392,
											"end": 10406,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10385,
											"end": 10435,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10268,
											"end": 10442,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10268,
											"end": 10442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10448,
											"end": 10814,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 10448,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10590,
											"end": 10593,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10611,
											"end": 10678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 10675,
											"end": 10677,
											"name": "PUSH",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 10670,
											"end": 10673,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10611,
											"end": 10678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 10611,
											"end": 10678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10611,
											"end": 10678,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 10611,
											"end": 10678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10604,
											"end": 10678,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10604,
											"end": 10678,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 10776,
											"end": 10779,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 10687,
											"end": 10780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10687,
											"end": 10780,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 10687,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10805,
											"end": 10807,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10800,
											"end": 10803,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10796,
											"end": 10808,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10789,
											"end": 10808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10789,
											"end": 10808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10448,
											"end": 10814,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10448,
											"end": 10814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10448,
											"end": 10814,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10448,
											"end": 10814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10820,
											"end": 11239,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 10820,
											"end": 11239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10986,
											"end": 10990,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11024,
											"end": 11026,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11013,
											"end": 11022,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11009,
											"end": 11027,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11001,
											"end": 11027,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11001,
											"end": 11027,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11073,
											"end": 11082,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11067,
											"end": 11071,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11063,
											"end": 11083,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11059,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11048,
											"end": 11057,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11044,
											"end": 11061,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11037,
											"end": 11084,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11101,
											"end": 11232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 11227,
											"end": 11231,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11101,
											"end": 11232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 11101,
											"end": 11232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11101,
											"end": 11232,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 11101,
											"end": 11232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11093,
											"end": 11232,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11093,
											"end": 11232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10820,
											"end": 11239,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10820,
											"end": 11239,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10820,
											"end": 11239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10820,
											"end": 11239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11245,
											"end": 11687,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 11245,
											"end": 11687,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11394,
											"end": 11398,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11432,
											"end": 11434,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 11421,
											"end": 11430,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11417,
											"end": 11435,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11409,
											"end": 11435,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11409,
											"end": 11435,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11445,
											"end": 11516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 11513,
											"end": 11514,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11502,
											"end": 11511,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11498,
											"end": 11515,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11489,
											"end": 11495,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11445,
											"end": 11516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 11445,
											"end": 11516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11445,
											"end": 11516,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 11445,
											"end": 11516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11526,
											"end": 11598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 11594,
											"end": 11596,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11583,
											"end": 11592,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11579,
											"end": 11597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11570,
											"end": 11576,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11526,
											"end": 11598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 11526,
											"end": 11598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11526,
											"end": 11598,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 11526,
											"end": 11598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11608,
											"end": 11680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 11676,
											"end": 11678,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11665,
											"end": 11674,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11661,
											"end": 11679,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11652,
											"end": 11658,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11608,
											"end": 11680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 11608,
											"end": 11680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11608,
											"end": 11680,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 11608,
											"end": 11680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11245,
											"end": 11687,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11245,
											"end": 11687,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11245,
											"end": 11687,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11245,
											"end": 11687,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11245,
											"end": 11687,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11245,
											"end": 11687,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11245,
											"end": 11687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11693,
											"end": 11887,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 11693,
											"end": 11887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11733,
											"end": 11737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11753,
											"end": 11773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 11771,
											"end": 11772,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11753,
											"end": 11773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 11753,
											"end": 11773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11753,
											"end": 11773,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 11753,
											"end": 11773,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11748,
											"end": 11773,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11748,
											"end": 11773,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11787,
											"end": 11807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 11805,
											"end": 11806,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11787,
											"end": 11807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 11787,
											"end": 11807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11787,
											"end": 11807,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 11787,
											"end": 11807,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11782,
											"end": 11807,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11782,
											"end": 11807,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11831,
											"end": 11832,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11828,
											"end": 11829,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11824,
											"end": 11833,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11816,
											"end": 11833,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11816,
											"end": 11833,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11855,
											"end": 11856,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11849,
											"end": 11853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11846,
											"end": 11857,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 11843,
											"end": 11880,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11843,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 11843,
											"end": 11880,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11860,
											"end": 11878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 11860,
											"end": 11878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 11860,
											"end": 11878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11860,
											"end": 11878,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 11860,
											"end": 11878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11843,
											"end": 11880,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 11843,
											"end": 11880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11693,
											"end": 11887,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11693,
											"end": 11887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11693,
											"end": 11887,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11693,
											"end": 11887,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11693,
											"end": 11887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11893,
											"end": 12303,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 11893,
											"end": 12303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11933,
											"end": 11940,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11956,
											"end": 11976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 11974,
											"end": 11975,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11956,
											"end": 11976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 11956,
											"end": 11976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11956,
											"end": 11976,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 11956,
											"end": 11976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11951,
											"end": 11976,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11951,
											"end": 11976,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11990,
											"end": 12010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 12008,
											"end": 12009,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11990,
											"end": 12010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 11990,
											"end": 12010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11990,
											"end": 12010,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 11990,
											"end": 12010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11985,
											"end": 12010,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11985,
											"end": 12010,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12045,
											"end": 12046,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12042,
											"end": 12043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12038,
											"end": 12047,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 12067,
											"end": 12097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 12085,
											"end": 12096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12067,
											"end": 12097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 12067,
											"end": 12097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12067,
											"end": 12097,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 12067,
											"end": 12097,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12056,
											"end": 12097,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12056,
											"end": 12097,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12246,
											"end": 12247,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12237,
											"end": 12244,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12233,
											"end": 12248,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12230,
											"end": 12231,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12227,
											"end": 12249,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 12207,
											"end": 12208,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12200,
											"end": 12209,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12180,
											"end": 12263,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 12157,
											"end": 12296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 12157,
											"end": 12296,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12276,
											"end": 12294,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 12276,
											"end": 12294,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 12276,
											"end": 12294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12276,
											"end": 12294,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 12276,
											"end": 12294,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12157,
											"end": 12296,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 12157,
											"end": 12296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11941,
											"end": 12303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11893,
											"end": 12303,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11893,
											"end": 12303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11893,
											"end": 12303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11893,
											"end": 12303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11893,
											"end": 12303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12309,
											"end": 12489,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 12309,
											"end": 12489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12357,
											"end": 12434,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12354,
											"end": 12355,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12347,
											"end": 12435,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12454,
											"end": 12458,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 12451,
											"end": 12452,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12444,
											"end": 12459,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12478,
											"end": 12482,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 12475,
											"end": 12476,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12468,
											"end": 12483,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12680,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 12495,
											"end": 12680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12535,
											"end": 12536,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12552,
											"end": 12572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 12570,
											"end": 12571,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12552,
											"end": 12572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 12552,
											"end": 12572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12552,
											"end": 12572,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 12552,
											"end": 12572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12547,
											"end": 12572,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12547,
											"end": 12572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 12604,
											"end": 12605,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 12586,
											"end": 12606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12606,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 12586,
											"end": 12606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12581,
											"end": 12606,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12581,
											"end": 12606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12625,
											"end": 12626,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12615,
											"end": 12650,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 12615,
											"end": 12650,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12630,
											"end": 12648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 12630,
											"end": 12648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 12630,
											"end": 12648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12630,
											"end": 12648,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 12630,
											"end": 12648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12615,
											"end": 12650,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 12615,
											"end": 12650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12672,
											"end": 12673,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12669,
											"end": 12670,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12665,
											"end": 12674,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12660,
											"end": 12674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12660,
											"end": 12674,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12680,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12680,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12686,
											"end": 13239,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 12686,
											"end": 13239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12863,
											"end": 12867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12901,
											"end": 12904,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 12890,
											"end": 12899,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12886,
											"end": 12905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12878,
											"end": 12905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12878,
											"end": 12905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12915,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 12983,
											"end": 12984,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12972,
											"end": 12981,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12968,
											"end": 12985,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12959,
											"end": 12965,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 12915,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 12915,
											"end": 12986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12915,
											"end": 12986,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 12915,
											"end": 12986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12996,
											"end": 13068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 13064,
											"end": 13066,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13053,
											"end": 13062,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13049,
											"end": 13067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13040,
											"end": 13046,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12996,
											"end": 13068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 12996,
											"end": 13068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12996,
											"end": 13068,
											"name": "tag",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 12996,
											"end": 13068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13078,
											"end": 13150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 13146,
											"end": 13148,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13135,
											"end": 13144,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13131,
											"end": 13149,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13122,
											"end": 13128,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 13078,
											"end": 13150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 13078,
											"end": 13150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13078,
											"end": 13150,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 13078,
											"end": 13150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13160,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 13228,
											"end": 13230,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 13217,
											"end": 13226,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13213,
											"end": 13231,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13204,
											"end": 13210,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13160,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 13160,
											"end": 13232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13160,
											"end": 13232,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 13160,
											"end": 13232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12686,
											"end": 13239,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 12686,
											"end": 13239,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 12686,
											"end": 13239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12686,
											"end": 13239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12686,
											"end": 13239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12686,
											"end": 13239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12686,
											"end": 13239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12686,
											"end": 13239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13245,
											"end": 13470,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 13245,
											"end": 13470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13385,
											"end": 13419,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 13381,
											"end": 13382,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13373,
											"end": 13379,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13369,
											"end": 13383,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13362,
											"end": 13420,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13454,
											"end": 13462,
											"name": "PUSH",
											"source": 4,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13449,
											"end": 13451,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13441,
											"end": 13447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13437,
											"end": 13452,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13430,
											"end": 13463,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13245,
											"end": 13470,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13245,
											"end": 13470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13476,
											"end": 13842,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 13476,
											"end": 13842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13618,
											"end": 13621,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13639,
											"end": 13706,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 13703,
											"end": 13705,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 13698,
											"end": 13701,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13639,
											"end": 13706,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 13639,
											"end": 13706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13639,
											"end": 13706,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 13639,
											"end": 13706,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13632,
											"end": 13706,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13632,
											"end": 13706,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13715,
											"end": 13808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 13804,
											"end": 13807,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13715,
											"end": 13808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 13715,
											"end": 13808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13715,
											"end": 13808,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 13715,
											"end": 13808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13833,
											"end": 13835,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13828,
											"end": 13831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13824,
											"end": 13836,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13817,
											"end": 13836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13817,
											"end": 13836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13476,
											"end": 13842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13476,
											"end": 13842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13476,
											"end": 13842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13476,
											"end": 13842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13848,
											"end": 14267,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 13848,
											"end": 14267,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14014,
											"end": 14018,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14052,
											"end": 14054,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14041,
											"end": 14050,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14037,
											"end": 14055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14029,
											"end": 14055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14029,
											"end": 14055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14101,
											"end": 14110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14095,
											"end": 14099,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14091,
											"end": 14111,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14087,
											"end": 14088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14076,
											"end": 14085,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14072,
											"end": 14089,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14065,
											"end": 14112,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 14255,
											"end": 14259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 14129,
											"end": 14260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14129,
											"end": 14260,
											"name": "tag",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 14129,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14121,
											"end": 14260,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14121,
											"end": 14260,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13848,
											"end": 14267,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13848,
											"end": 14267,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13848,
											"end": 14267,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13848,
											"end": 14267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14273,
											"end": 14455,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 14273,
											"end": 14455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14413,
											"end": 14447,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 14409,
											"end": 14410,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14401,
											"end": 14407,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14397,
											"end": 14411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14390,
											"end": 14448,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14273,
											"end": 14455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14273,
											"end": 14455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14461,
											"end": 14827,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 14461,
											"end": 14827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14603,
											"end": 14606,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14624,
											"end": 14691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 14688,
											"end": 14690,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14683,
											"end": 14686,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14624,
											"end": 14691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 14624,
											"end": 14691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14624,
											"end": 14691,
											"name": "tag",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 14624,
											"end": 14691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14617,
											"end": 14691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14617,
											"end": 14691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14700,
											"end": 14793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 14789,
											"end": 14792,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14700,
											"end": 14793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 14700,
											"end": 14793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14700,
											"end": 14793,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 14700,
											"end": 14793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14818,
											"end": 14820,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14813,
											"end": 14816,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14809,
											"end": 14821,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14802,
											"end": 14821,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14802,
											"end": 14821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14461,
											"end": 14827,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14461,
											"end": 14827,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14461,
											"end": 14827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14461,
											"end": 14827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14833,
											"end": 15252,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 14833,
											"end": 15252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14999,
											"end": 15003,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15037,
											"end": 15039,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15026,
											"end": 15035,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15022,
											"end": 15040,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15014,
											"end": 15040,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15014,
											"end": 15040,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15086,
											"end": 15095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15080,
											"end": 15084,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15076,
											"end": 15096,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15072,
											"end": 15073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15061,
											"end": 15070,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15057,
											"end": 15074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15050,
											"end": 15097,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15114,
											"end": 15245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 15240,
											"end": 15244,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15114,
											"end": 15245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 15114,
											"end": 15245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15114,
											"end": 15245,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 15114,
											"end": 15245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15106,
											"end": 15245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15106,
											"end": 15245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14833,
											"end": 15252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14833,
											"end": 15252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14833,
											"end": 15252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14833,
											"end": 15252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"market3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyNFT(uint256)": "51ed8288",
							"owner()": "8da5cb5b",
							"removeSale(uint256)": "44e797e9",
							"renounceOwnership()": "715018a6",
							"sale(uint256)": "96032702",
							"saleId()": "c84c0387",
							"saleIdToTokenId(uint256)": "60898801",
							"saleNFT(uint256,uint256)": "26d8fde2",
							"setInterface(address)": "97492c46",
							"setTradingFee(uint256)": "b0d54bcf",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"BuyNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"RemoveSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"SaleNFT\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"buyNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"removeSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"saleIdToTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"saleNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"setInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tradingFee\",\"type\":\"uint256\"}],\"name\":\"setTradingFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"market3.sol\":\"MarketPlace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"market3.sol\":{\"keccak256\":\"0x009c91306617f7bec49a1e12802fb33307301b671bc556c7cdfbbb34122e66db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc7892956c33ed04d7c362e7d799ded915439036655bf4f652017c4dd9bb6f0a\",\"dweb:/ipfs/QmTH6VKvV7cBvnozt498jtamwQzcKodmKz6LD8b5MnsLvF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "market3.sol:MarketPlace",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 499,
								"contract": "market3.sol:MarketPlace",
								"label": "tradingFee",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 502,
								"contract": "market3.sol:MarketPlace",
								"label": "saleId",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 506,
								"contract": "market3.sol:MarketPlace",
								"label": "sale",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 510,
								"contract": "market3.sol:MarketPlace",
								"label": "saleIdToTokenId",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 513,
								"contract": "market3.sol:MarketPlace",
								"label": "erc721",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(erc721Interface)467"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(erc721Interface)467": {
								"encoding": "inplace",
								"label": "contract erc721Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"erc721Interface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"market3.sol\":\"erc721Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"market3.sol\":{\"keccak256\":\"0x009c91306617f7bec49a1e12802fb33307301b671bc556c7cdfbbb34122e66db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc7892956c33ed04d7c362e7d799ded915439036655bf4f652017c4dd9bb6f0a\",\"dweb:/ipfs/QmTH6VKvV7cBvnozt498jtamwQzcKodmKz6LD8b5MnsLvF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							446
						]
					},
					"id": 447,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 446,
							"linearizedBaseContracts": [
								446
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "717:140:2",
										"statements": [
											{
												"id": 167,
												"nodeType": "UncheckedBlock",
												"src": "727:124:2",
												"statements": [
													{
														"assignments": [
															150
														],
														"declarations": [
															{
																"constant": false,
																"id": 150,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 167,
																"src": "751:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 149,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 154,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 151,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "763:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 152,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 155,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "786:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 156,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 162,
														"nodeType": "IfStatement",
														"src": "782:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 148,
															"id": 161,
															"nodeType": "Return",
															"src": "793:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 164,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 165,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 148,
														"id": 166,
														"nodeType": "Return",
														"src": "824:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:2"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "702:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:2"
									},
									"scope": 446,
									"src": "641:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1078:113:2",
										"statements": [
											{
												"id": 195,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "1116:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 182,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "1120:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 188,
														"nodeType": "IfStatement",
														"src": "1112:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 180,
															"id": 187,
															"nodeType": "Return",
															"src": "1123:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 190,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "1168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 191,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "1172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 193,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 180,
														"id": 194,
														"nodeType": "Return",
														"src": "1154:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1063:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:2"
									},
									"scope": 446,
									"src": "1002:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1415:417:2",
										"statements": [
											{
												"id": 237,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 209,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 216,
														"nodeType": "IfStatement",
														"src": "1679:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 214,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 208,
															"id": 215,
															"nodeType": "Return",
															"src": "1691:16:2"
														}
													},
													{
														"assignments": [
															218
														],
														"declarations": [
															{
																"constant": false,
																"id": 218,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 237,
																"src": "1721:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 217,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 222,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 219,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 220,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "1737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 223,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1756:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 224,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "1760:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 226,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "1765:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 232,
														"nodeType": "IfStatement",
														"src": "1752:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 230,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 208,
															"id": 231,
															"nodeType": "Return",
															"src": "1768:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 234,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1813:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 235,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 208,
														"id": 236,
														"nodeType": "Return",
														"src": "1799:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1406:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:2"
									},
									"scope": 446,
									"src": "1339:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2057:114:2",
										"statements": [
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "2095:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 258,
														"nodeType": "IfStatement",
														"src": "2091:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 256,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 250,
															"id": 257,
															"nodeType": "Return",
															"src": "2103:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "2148:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 261,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "2152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 263,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 250,
														"id": 264,
														"nodeType": "Return",
														"src": "2134:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1997:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:2"
									},
									"scope": 446,
									"src": "1981:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "2406:114:2",
										"statements": [
											{
												"id": 293,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "2444:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 286,
														"nodeType": "IfStatement",
														"src": "2440:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 284,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 278,
															"id": 285,
															"nodeType": "Return",
															"src": "2452:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 288,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "2497:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 289,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "2501:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 291,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 278,
														"id": 292,
														"nodeType": "Return",
														"src": "2483:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2357:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:2"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2391:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:2"
									},
									"scope": 446,
									"src": "2330:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "2822:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 305,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "2839:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 306,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 304,
												"id": 308,
												"nodeType": "Return",
												"src": "2832:12:2"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2779:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2813:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:2"
									},
									"scope": 446,
									"src": "2755:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "3189:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 320,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 321,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 319,
												"id": 323,
												"nodeType": "Return",
												"src": "3199:12:2"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3135:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:2"
									},
									"scope": 446,
									"src": "3122:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "3532:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 335,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "3549:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 336,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "3553:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 334,
												"id": 338,
												"nodeType": "Return",
												"src": "3542:12:2"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:2"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:2"
									},
									"scope": 446,
									"src": "3465:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "3917:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 350,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "3934:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 351,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "3938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 349,
												"id": 353,
												"nodeType": "Return",
												"src": "3927:12:2"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:2"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:2"
									},
									"scope": 446,
									"src": "3850:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "4466:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 365,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "4483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 366,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "4487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 364,
												"id": 368,
												"nodeType": "Return",
												"src": "4476:12:2"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4412:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4423:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:2"
									},
									"scope": 446,
									"src": "4399:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "5084:106:2",
										"statements": [
											{
												"id": 393,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 383,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "5126:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 384,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "5131:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 386,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "5134:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 382,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 388,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 389,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "5168:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 390,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "5172:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 381,
														"id": 392,
														"nodeType": "Return",
														"src": "5161:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "4981:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5000:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5019:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 376,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:2"
									},
									"scope": 446,
									"src": "4959:231:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "5799:105:2",
										"statements": [
											{
												"id": 418,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 408,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "5841:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 411,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "5848:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 407,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 413,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 414,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "5882:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 415,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "5886:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 406,
														"id": 417,
														"nodeType": "Return",
														"src": "5875:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5696:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5715:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5734:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 401,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:2"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5790:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:2"
									},
									"scope": 446,
									"src": "5674:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "6675:105:2",
										"statements": [
											{
												"id": 443,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 433,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "6717:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 436,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "6724:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 432,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 438,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 439,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "6758:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 440,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "6762:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 431,
														"id": 442,
														"nodeType": "Return",
														"src": "6751:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6572:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6591:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6610:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 426,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6666:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:2"
									},
									"scope": 446,
									"src": "6550:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 447,
							"src": "482:6300:2",
							"usedErrors": []
						}
					],
					"src": "107:6676:2"
				},
				"id": 2
			},
			"market3.sol": {
				"ast": {
					"absolutePath": "market3.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"MarketPlace": [
							738
						],
						"Ownable": [
							112
						],
						"SafeMath": [
							446
						],
						"erc721Interface": [
							467
						]
					},
					"id": 739,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 448,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "135:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 449,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 739,
							"sourceUnit": 113,
							"src": "160:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 450,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 739,
							"sourceUnit": 447,
							"src": "213:57:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "erc721Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 467,
							"linearizedBaseContracts": [
								467
							],
							"name": "erc721Interface",
							"nameLocation": "282:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "6352211e",
									"id": 457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "313:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "329:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "321:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "321:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "320:17:3"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "361:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:9:3"
									},
									"scope": 467,
									"src": "304:66:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42842e0e",
									"id": 466,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "385:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "410:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "402:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "402:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "424:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "416:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "436:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "428:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "401:43:3"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "453:0:3"
									},
									"scope": 467,
									"src": "376:78:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 739,
							"src": "272:184:3",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 468,
										"name": "Ownable",
										"nameLocations": [
											"482:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "482:7:3"
									},
									"id": 469,
									"nodeType": "InheritanceSpecifier",
									"src": "482:7:3"
								}
							],
							"canonicalName": "MarketPlace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 738,
							"linearizedBaseContracts": [
								738,
								112,
								134
							],
							"name": "MarketPlace",
							"nameLocation": "467:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "a6a83f41a222e54496abc9714714160fa0ea96150ffdb4aebaf93e3054baa942",
									"id": 477,
									"name": "SaleNFT",
									"nameLocation": "555:7:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "571:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "563:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "585:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "577:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "602:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "594:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "594:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "562:46:3"
									},
									"src": "549:60:3"
								},
								{
									"anonymous": false,
									"eventSelector": "e35677743c6b7abf01cca38cf0f4b986386e50105ec5fd3f42daeea57acf57a9",
									"id": 487,
									"name": "BuyNFT",
									"nameLocation": "621:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "636:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "628:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "650:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "642:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "659:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "654:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "654:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "676:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "668:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "627:55:3"
									},
									"src": "615:68:3"
								},
								{
									"anonymous": false,
									"eventSelector": "cde58bc7bff2645d4598b3ef8da25103b048f9904835655d853e614095d7f2ab",
									"id": 493,
									"name": "RemoveSale",
									"nameLocation": "694:10:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "713:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "705:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "727:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "719:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "704:31:3"
									},
									"src": "688:48:3"
								},
								{
									"global": false,
									"id": 496,
									"libraryName": {
										"id": 494,
										"name": "SafeMath",
										"nameLocations": [
											"749:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 446,
										"src": "749:8:3"
									},
									"nodeType": "UsingForDirective",
									"src": "743:27:3",
									"typeName": {
										"id": 495,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "762:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 499,
									"mutability": "mutable",
									"name": "tradingFee",
									"nameLocation": "784:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 738,
									"src": "776:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 497,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "776:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 498,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "797:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "c84c0387",
									"id": 502,
									"mutability": "mutable",
									"name": "saleId",
									"nameLocation": "819:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 738,
									"src": "804:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 500,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "804:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 501,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "828:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "96032702",
									"id": 506,
									"mutability": "mutable",
									"name": "sale",
									"nameLocation": "874:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 738,
									"src": "839:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 505,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 503,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "847:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "839:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 504,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "858:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "60898801",
									"id": 510,
									"mutability": "mutable",
									"name": "saleIdToTokenId",
									"nameLocation": "919:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 738,
									"src": "884:50:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 509,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 507,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "892:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "884:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 508,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "903:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 513,
									"mutability": "mutable",
									"name": "erc721",
									"nameLocation": "958:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 738,
									"src": "942:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_erc721Interface_$467",
										"typeString": "contract erc721Interface"
									},
									"typeName": {
										"id": 512,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 511,
											"name": "erc721Interface",
											"nameLocations": [
												"942:15:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 467,
											"src": "942:15:3"
										},
										"referencedDeclaration": 467,
										"src": "942:15:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_erc721Interface_$467",
											"typeString": "contract erc721Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "1200:133:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 523,
																"name": "_contractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "1218:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1246:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1238:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 524,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1238:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1238:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1218:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1210:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1210:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "1210:41:3"
											},
											{
												"expression": {
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 531,
														"name": "erc721",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "1261:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_erc721Interface_$467",
															"typeString": "contract erc721Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 533,
																"name": "_contractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "1286:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 532,
															"name": "erc721Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "1270:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_erc721Interface_$467_$",
																"typeString": "type(contract erc721Interface)"
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1270:33:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_erc721Interface_$467",
															"typeString": "contract erc721Interface"
														}
													},
													"src": "1261:42:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_erc721Interface_$467",
														"typeString": "contract erc721Interface"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "1261:42:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1320:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 521,
												"id": 538,
												"nodeType": "Return",
												"src": "1313:11:3"
											}
										]
									},
									"functionSelector": "97492c46",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 518,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 517,
												"name": "onlyOwner",
												"nameLocations": [
													"1176:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1176:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1176:9:3"
										}
									],
									"name": "setInterface",
									"nameLocation": "1130:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "_contractAddress",
												"nameLocation": "1151:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "1143:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1142:26:3"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "1194:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1194:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1193:6:3"
									},
									"scope": 738,
									"src": "1121:212:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "1428:543:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 548,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "1446:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1455:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1446:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206d7573742062652067726561746572207468616e207a65726f",
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1458:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																"typeString": "literal_string \"Price must be greater than zero\""
															},
															"value": "Price must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																"typeString": "literal_string \"Price must be greater than zero\""
															}
														],
														"id": 547,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1438:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1438:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "1438:54:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 555,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1510:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1514:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1510:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 559,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 542,
																		"src": "1539:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 557,
																		"name": "erc721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "1524:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_erc721Interface_$467",
																			"typeString": "contract erc721Interface"
																		}
																	},
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1531:7:3",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 457,
																	"src": "1524:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1524:24:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1510:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f742020746f6b656e206f776e657221",
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1550:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e78d8339bea1951bddddab05544b8ef190d674139511ac28e7e1f3d57ef72f6d",
																"typeString": "literal_string \"Caller is not  token owner!\""
															},
															"value": "Caller is not  token owner!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e78d8339bea1951bddddab05544b8ef190d674139511ac28e7e1f3d57ef72f6d",
																"typeString": "literal_string \"Caller is not  token owner!\""
															}
														],
														"id": 554,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1502:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1502:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "1502:78:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 566,
																	"name": "sale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "1598:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 568,
																"indexExpression": {
																	"id": 567,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "1603:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1598:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1616:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1598:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320746f6b656e20697320616c7265616479206f6e2073616c65",
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1619:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2afe0ce36414889a12a4f80007074ded6aba61b23cf3ead7274e914ffc0c83f",
																"typeString": "literal_string \"This token is already on sale\""
															},
															"value": "This token is already on sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2afe0ce36414889a12a4f80007074ded6aba61b23cf3ead7274e914ffc0c83f",
																"typeString": "literal_string \"This token is already on sale\""
															}
														],
														"id": 565,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1590:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1590:61:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "1590:61:3"
											},
											{
												"expression": {
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 574,
															"name": "sale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "1661:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 576,
														"indexExpression": {
															"id": 575,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "1666:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1661:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 577,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "1678:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1661:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "1661:23:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 580,
															"name": "saleIdToTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "1795:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 582,
														"indexExpression": {
															"id": 581,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "1811:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1795:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1824:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1795:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 595,
												"nodeType": "IfStatement",
												"src": "1792:117:3",
												"trueBody": {
													"id": 594,
													"nodeType": "Block",
													"src": "1826:83:3",
													"statements": [
														{
															"expression": {
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1840:8:3",
																"subExpression": {
																	"id": 585,
																	"name": "saleId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "1840:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 587,
															"nodeType": "ExpressionStatement",
															"src": "1840:8:3"
														},
														{
															"expression": {
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 588,
																		"name": "saleIdToTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "1863:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 590,
																	"indexExpression": {
																		"id": 589,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 542,
																		"src": "1879:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1863:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 591,
																	"name": "saleId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "1891:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1863:34:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 593,
															"nodeType": "ExpressionStatement",
															"src": "1863:34:3"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 597,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1931:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1935:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1931:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 599,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "1943:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 600,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "1953:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 596,
														"name": "SaleNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "1923:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1923:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "EmitStatement",
												"src": "1918:42:3"
											}
										]
									},
									"functionSelector": "26d8fde2",
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saleNFT",
									"nameLocation": "1379:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1395:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1387:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1387:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "1413:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1405:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1405:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1386:34:3"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1428:0:3"
									},
									"scope": 738,
									"src": "1370:601:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "2030:718:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 610,
																	"name": "sale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "2048:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 612,
																"indexExpression": {
																	"id": 611,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "2053:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2048:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2066:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2048:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4654206973206e6f7420666f722073616c65",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2069:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738",
																"typeString": "literal_string \"NFT is not for sale\""
															},
															"value": "NFT is not for sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9a7dba745c3f0f725179d2251b074ed7a58cdde5cc676b2b7aa39aa411348738",
																"typeString": "literal_string \"NFT is not for sale\""
															}
														],
														"id": 609,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2040:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2040:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "2040:51:3"
											},
											{
												"assignments": [
													619
												],
												"declarations": [
													{
														"constant": false,
														"id": 619,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "2109:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 677,
														"src": "2101:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 618,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2101:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 623,
												"initialValue": {
													"baseExpression": {
														"id": 620,
														"name": "sale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "2117:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 622,
													"indexExpression": {
														"id": 621,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "2122:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2117:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2101:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 625,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2221:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2225:5:3",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2221:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 627,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 619,
																"src": "2234:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2221:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f7272656374207061796d656e7420616d6f756e74",
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2241:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d",
																"typeString": "literal_string \"Incorrect payment amount\""
															},
															"value": "Incorrect payment amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d",
																"typeString": "literal_string \"Incorrect payment amount\""
															}
														],
														"id": 624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2213:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2213:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "2213:55:3"
											},
											{
												"assignments": [
													633
												],
												"declarations": [
													{
														"constant": false,
														"id": 633,
														"mutability": "mutable",
														"name": "seller",
														"nameLocation": "2286:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 677,
														"src": "2278:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 632,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2278:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 638,
												"initialValue": {
													"arguments": [
														{
															"id": 636,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "2310:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 634,
															"name": "erc721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "2295:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_erc721Interface_$467",
																"typeString": "contract erc721Interface"
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2302:7:3",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 457,
														"src": "2295:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view external returns (address)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2295:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2278:41:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 642,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "2354:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 643,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2362:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2366:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2362:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "2374:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 639,
															"name": "erc721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "2330:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_erc721Interface_$467",
																"typeString": "contract erc721Interface"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2337:16:3",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 466,
														"src": "2330:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2330:53:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "2330:53:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 653,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2537:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2541:5:3",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2537:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "313030",
																				"id": 655,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2550:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 656,
																				"name": "tradingFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 499,
																				"src": "2556:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2550:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 658,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2549:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2537:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2570:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "2537:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 650,
																	"name": "seller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "2520:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2512:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 648,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2512:8:3",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2512:15:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2528:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2512:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2512:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "2512:62:3"
											},
											{
												"expression": {
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "2652:21:3",
													"subExpression": {
														"baseExpression": {
															"id": 664,
															"name": "sale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "2659:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 666,
														"indexExpression": {
															"id": 665,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "2664:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2659:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "2652:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 670,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "2695:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 671,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2703:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2707:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2703:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 673,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "2715:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 674,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "2725:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 669,
														"name": "BuyNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "2688:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2688:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "EmitStatement",
												"src": "2683:48:3"
											}
										]
									},
									"functionSelector": "51ed8288",
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyNFT",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2005:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "1997:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:18:3"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2030:0:3"
									},
									"scope": 738,
									"src": "1981:767:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "2911:237:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 684,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2929:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2933:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2929:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 688,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "2958:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 686,
																		"name": "erc721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "2943:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_erc721Interface_$467",
																			"typeString": "contract erc721Interface"
																		}
																	},
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2950:7:3",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 457,
																	"src": "2943:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2943:24:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2929:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792073656c6c65722063616e2072656d6f7665206c697374",
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2969:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_09dd53b62676719b8040611347978192842d176f40ffbc2b8a147e39c69a644c",
																"typeString": "literal_string \"Only seller can remove list\""
															},
															"value": "Only seller can remove list"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_09dd53b62676719b8040611347978192842d176f40ffbc2b8a147e39c69a644c",
																"typeString": "literal_string \"Only seller can remove list\""
															}
														],
														"id": 683,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2921:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2921:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "2921:78:3"
											},
											{
												"expression": {
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3009:21:3",
													"subExpression": {
														"baseExpression": {
															"id": 694,
															"name": "sale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3016:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 696,
														"indexExpression": {
															"id": 695,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "3021:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3016:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "3009:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 700,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3120:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3124:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3120:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 702,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "3132:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 699,
														"name": "RemoveSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "3109:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3109:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 704,
												"nodeType": "EmitStatement",
												"src": "3104:37:3"
											}
										]
									},
									"functionSelector": "44e797e9",
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeSale",
									"nameLocation": "2875:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2894:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "2886:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2885:18:3"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2911:0:3"
									},
									"scope": 738,
									"src": "2866:282:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "3215:41:3",
										"statements": [
											{
												"expression": {
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 713,
														"name": "tradingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "3225:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 714,
														"name": "_tradingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "3238:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3225:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "3225:24:3"
											}
										]
									},
									"functionSelector": "b0d54bcf",
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 711,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 710,
												"name": "onlyOwner",
												"nameLocations": [
													"3205:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3205:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3205:9:3"
										}
									],
									"name": "setTradingFee",
									"nameLocation": "3163:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "_tradingFee",
												"nameLocation": "3185:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "3177:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3177:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:21:3"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3215:0:3"
									},
									"scope": 738,
									"src": "3154:102:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "3299:66:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 731,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3343:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MarketPlace_$738",
																			"typeString": "contract MarketPlace"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MarketPlace_$738",
																			"typeString": "contract MarketPlace"
																		}
																	],
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3335:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 729,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3335:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3335:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3349:7:3",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "3335:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 725,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "3317:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3317:7:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3309:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 723,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3309:8:3",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3309:16:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3326:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3309:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3309:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "3309:48:3"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 721,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 720,
												"name": "onlyOwner",
												"nameLocations": [
													"3289:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3289:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3289:9:3"
										}
									],
									"name": "withdraw",
									"nameLocation": "3271:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3279:2:3"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3299:0:3"
									},
									"scope": 738,
									"src": "3262:103:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 739,
							"src": "458:2909:3",
							"usedErrors": []
						}
					],
					"src": "135:3232:3"
				},
				"id": 3
			}
		}
	}
}
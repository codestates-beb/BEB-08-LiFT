import { PaginatedOperation, PaginatedRequest } from 'moralis/common-core';
export interface FetcherPaginatedResponse<Response> {
    total?: number;
    page: number;
    pageSize: number;
    cursor?: string | undefined;
    data: Response;
}
export interface FetcherParams<TOperation> {
    operation: TOperation;
    request: PaginatedRequest;
}
declare function fetcherPaginated<JSONRequest, Response, JSONResult>(endpoint: string, { operation, request, }: FetcherParams<Pick<PaginatedOperation<PaginatedRequest, JSONRequest, Response, JSONResult>, 'serializeRequest' | 'deserializeResponse'>>): Promise<{
    total?: number | undefined;
    page: number;
    pageSize: number;
    cursor?: string | undefined;
    data: Response;
}>;
export default fetcherPaginated;
//# sourceMappingURL=fetcherPaginated.d.ts.map
import { GetNativeBalancesForAddressesRequest } from 'moralis/common-evm-utils';
import { FetchParams } from '../../../types';
export declare const useEvmNativeBalancesForAddresses: (request?: GetNativeBalancesForAddressesRequest, fetchParams?: FetchParams) => {
    data: {
        chain: import("@moralisweb3/common-evm-utils").EvmChain;
        blockNumber: string;
        blockTimestamp: string;
        totalBalance: import("@moralisweb3/common-evm-utils").EvmNative;
        walletBalances: {
            address: import("@moralisweb3/common-evm-utils").EvmAddress;
            balance: import("@moralisweb3/common-evm-utils").EvmNative;
        }[];
    }[] | undefined;
    error: any;
    fetch: (params?: GetNativeBalancesForAddressesRequest | undefined) => Promise<{
        chain: import("@moralisweb3/common-evm-utils").EvmChain;
        blockNumber: string;
        blockTimestamp: string;
        totalBalance: import("@moralisweb3/common-evm-utils").EvmNative;
        walletBalances: {
            address: import("@moralisweb3/common-evm-utils").EvmAddress;
            balance: import("@moralisweb3/common-evm-utils").EvmNative;
        }[];
    }[] | undefined>;
    /**
     * @deprecated use `fetch()` instead
     */
    refetch: () => Promise<{
        chain: import("@moralisweb3/common-evm-utils").EvmChain;
        blockNumber: string;
        blockTimestamp: string;
        totalBalance: import("@moralisweb3/common-evm-utils").EvmNative;
        walletBalances: {
            address: import("@moralisweb3/common-evm-utils").EvmAddress;
            balance: import("@moralisweb3/common-evm-utils").EvmNative;
        }[];
    }[] | undefined>;
    isFetching: boolean;
    /**
     * @deprecated use `isFetching` instead
     */
    isValidating: boolean;
};
//# sourceMappingURL=useEvmNativeBalancesForAddresses.d.ts.map
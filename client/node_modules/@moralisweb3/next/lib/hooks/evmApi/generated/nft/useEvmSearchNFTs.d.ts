import { SearchNFTsRequest } from 'moralis/common-evm-utils';
import { FetchParams } from '../../../types';
export declare const useEvmSearchNFTs: (request?: SearchNFTsRequest, fetchParams?: FetchParams) => {
    data: {
        token: import("@moralisweb3/common-evm-utils").EvmNft;
        tokenHash: string;
        blockNumberMinted: string;
        lastMetadataSync: Date | undefined;
        lastTokenUriSync: Date | undefined;
        batchId: string;
        frozen: number;
        frozenLogIndex: {
            [key: string]: unknown;
        } | undefined;
        imported: {
            [key: string]: unknown;
        } | undefined;
        isValid: number;
        openseaLookup: {
            [key: string]: unknown;
        } | undefined;
        resyncing: number;
        syncing: number;
        updatedAt: Date;
    }[] | undefined;
    cursor: string | undefined;
    page: number | undefined;
    pageSize: number | undefined;
    total: number | undefined;
    error: any;
    fetch: (params?: SearchNFTsRequest | undefined) => Promise<import("../../../../utils/fetchers/fetcherPaginated").FetcherPaginatedResponse<{
        token: import("@moralisweb3/common-evm-utils").EvmNft;
        tokenHash: string;
        blockNumberMinted: string;
        lastMetadataSync: Date | undefined;
        lastTokenUriSync: Date | undefined;
        batchId: string;
        frozen: number;
        frozenLogIndex: {
            [key: string]: unknown;
        } | undefined;
        imported: {
            [key: string]: unknown;
        } | undefined;
        isValid: number;
        openseaLookup: {
            [key: string]: unknown;
        } | undefined;
        resyncing: number;
        syncing: number;
        updatedAt: Date;
    }[]> | undefined>;
    /**
     * @deprecated use `fetch()` instead
     */
    refetch: () => Promise<import("../../../../utils/fetchers/fetcherPaginated").FetcherPaginatedResponse<{
        token: import("@moralisweb3/common-evm-utils").EvmNft;
        tokenHash: string;
        blockNumberMinted: string;
        lastMetadataSync: Date | undefined;
        lastTokenUriSync: Date | undefined;
        batchId: string;
        frozen: number;
        frozenLogIndex: {
            [key: string]: unknown;
        } | undefined;
        imported: {
            [key: string]: unknown;
        } | undefined;
        isValid: number;
        openseaLookup: {
            [key: string]: unknown;
        } | undefined;
        resyncing: number;
        syncing: number;
        updatedAt: Date;
    }[]> | undefined>;
    isFetching: boolean;
    /**
     * @deprecated use `isFetching` instead
     */
    isValidating: boolean;
};
//# sourceMappingURL=useEvmSearchNFTs.d.ts.map
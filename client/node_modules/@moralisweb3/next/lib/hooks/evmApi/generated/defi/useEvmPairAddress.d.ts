import { GetPairAddressRequest } from 'moralis/common-evm-utils';
import { FetchParams } from '../../../types';
export declare const useEvmPairAddress: (request?: GetPairAddressRequest, fetchParams?: FetchParams) => {
    data: {
        token0: {
            token: import("@moralisweb3/common-evm-utils").Erc20Token;
            blockNumber: string | undefined;
            validated: number | undefined;
            createdAt: Date | undefined;
        };
        token1: {
            token: import("@moralisweb3/common-evm-utils").Erc20Token;
            blockNumber: string | undefined;
            validated: number | undefined;
            createdAt: Date | undefined;
        };
        pairAddress: import("@moralisweb3/common-evm-utils").EvmAddress | undefined;
    } | undefined;
    error: any;
    fetch: (params?: GetPairAddressRequest | undefined) => Promise<{
        token0: {
            token: import("@moralisweb3/common-evm-utils").Erc20Token;
            blockNumber: string | undefined;
            validated: number | undefined;
            createdAt: Date | undefined;
        };
        token1: {
            token: import("@moralisweb3/common-evm-utils").Erc20Token;
            blockNumber: string | undefined;
            validated: number | undefined;
            createdAt: Date | undefined;
        };
        pairAddress: import("@moralisweb3/common-evm-utils").EvmAddress | undefined;
    } | undefined>;
    /**
     * @deprecated use `fetch()` instead
     */
    refetch: () => Promise<{
        token0: {
            token: import("@moralisweb3/common-evm-utils").Erc20Token;
            blockNumber: string | undefined;
            validated: number | undefined;
            createdAt: Date | undefined;
        };
        token1: {
            token: import("@moralisweb3/common-evm-utils").Erc20Token;
            blockNumber: string | undefined;
            validated: number | undefined;
            createdAt: Date | undefined;
        };
        pairAddress: import("@moralisweb3/common-evm-utils").EvmAddress | undefined;
    } | undefined>;
    isFetching: boolean;
    /**
     * @deprecated use `isFetching` instead
     */
    isValidating: boolean;
};
//# sourceMappingURL=useEvmPairAddress.d.ts.map
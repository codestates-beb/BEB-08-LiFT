import { GetSPLRequest } from 'moralis/common-sol-utils';
import { FetchParams } from '../../../types';
export declare const useSolSPL: (request?: GetSPLRequest, fetchParams?: FetchParams) => {
    data: {
        associatedTokenAddress: import("@moralisweb3/common-sol-utils").SolAddress;
        mint: import("@moralisweb3/common-sol-utils").SolAddress;
        amount: import("@moralisweb3/common-sol-utils").SolNative;
        name: string;
        symbol: string;
    }[] | undefined;
    error: any;
    fetch: (params?: GetSPLRequest | undefined) => Promise<{
        associatedTokenAddress: import("@moralisweb3/common-sol-utils").SolAddress;
        mint: import("@moralisweb3/common-sol-utils").SolAddress;
        amount: import("@moralisweb3/common-sol-utils").SolNative;
        name: string;
        symbol: string;
    }[] | undefined>;
    /**
     * @deprecated use `fetch()` instead
     */
    refetch: () => Promise<{
        associatedTokenAddress: import("@moralisweb3/common-sol-utils").SolAddress;
        mint: import("@moralisweb3/common-sol-utils").SolAddress;
        amount: import("@moralisweb3/common-sol-utils").SolNative;
        name: string;
        symbol: string;
    }[] | undefined>;
    isFetching: boolean;
    /**
     * @deprecated use `isFetching` instead
     */
    isValidating: boolean;
};
//# sourceMappingURL=useSolSPL.d.ts.map
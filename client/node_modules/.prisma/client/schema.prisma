// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  relationMode= "prisma"
}
model categories {
  id   Int    @id @default(autoincrement())
  name String
}

model dnfts {
  id          Int      @id @default(autoincrement())
  name        String
  image_url   String?
  category_id Int
  contents    String?
  price Int
  createdAt   DateTime @default(now())

  @@index([category_id])
}

model user {
  id String @id @default(cuid()) 
  name String?
  address String? @unique
  image String?
  expires String?
}

model Wishlist {
  id Int @id @default(autoincrement())
  userId String @unique
  dnftIds String
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  address         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  id String?

  @@unique([identifier, token])
}

model Cart {
  id Int @id @default(autoincrement())
  userId String
  dnftId Int
  amount Int
}

model OrderItem {
  id Int @id @default(autoincrement())
  dnftId Int
  amount Int
}

model Orders {
  id Int @id @default(autoincrement())
  userId String
  orderItemIds String
  receiver String?
  createdAt DateTime @default(now())
  status Int
}